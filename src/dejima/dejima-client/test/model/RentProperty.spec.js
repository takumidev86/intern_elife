/**
 * ES 物件API
 * （株）いい生活 が提供予定の 物件情報API のインターフェイス仕様書  いい物件Oneに登録した賃貸物件情報を参照する物件参照API仕様について定める。  ※1: 開発中のため、実際のリリース時の仕様は異なる場合がございます。  ※2: 売買物件に関する仕様に関してはα版であり、今後大きな仕様の見直しを行う可能性がございます。  ## リソース仕様  ### 通信仕様  HTTP/2 および HTTP/1.1 をサポートする。通信はTLSで暗号化されたHTTPSのみを許可する。  ### リクエストヘッダ  リクエストヘッダには以下の指定を必須とする。  | No. | リクエストヘッダのフィールド名 | 指定値 | |:---:|:-------------------------------|:-------| | 1 | Accept | application/json | | 2 | X-Api-Key | 弊社が指定するキー。ご利用のお客様を特定するためのもの。 |  Acceptヘッダには、常にapplication/json を指定する。 これにより、レスポンスがJSONであることを指示する。  ### データフォーマットと文字コード  データフォーマットはJSON、文字コードはUTF-8とする。  ### データ型  通常のJSONの型以外に擬似型としていくつかのデータ型を用意している。 これは、JSON標準では表現しきれないデータや、不動産特有のデータを扱うために定義したもので使用する。 また、ここに記載の無いデータ型については、 OpenAPI Specification (Version 3.0.2) の DataTypes に準拠する。  * [DataTypes](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types)   | No. | 型 | 説明 | |:---:|:---|:-----| | 1 | string | JSON標準の文字列 | | 2 | int | JSON標準の整数 | | 3 | float | JSON標準の浮動小数点数 | | 4 | bool | JSON標準の真偽値 | | 5 | datetime | ISO8611フォーマットの日付時刻を表す文字列。YYYY-MM-DDTHH:MM:SS。 <br> 例: 2015-08-26T19:16:03 = 2015年8月26日19時16分03秒 | | 6 | date | ISO8611フォーマットの日付を表す文字列。YYYY-MM-DD。 <br> 例: 2015-08-26 = 2015年8月26日 | | 7 | datejun | 後述 |  #### datejun型  いい生活独自の日付と旬を表すフォーマット。YYYYMMJDD。  * YYYY: 西暦年 * MM: 月。01～12。ただし00とすることにより、年単位までの精度の数字を表現可能。 * J: 旬。1=上旬、2=中旬、3=下旬。 0とすることで月単位までの精度の数字を表現可能。 * DD: 日。01～31。ただし00とすることにより、旬単位までの精度の数字を表現可能。日単位の精度の場合、1～10日までは旬を1、11～20日までは旬を2、21日以降は旬を3と指定する必要がある。 * 例:     * 201900000 = 2019年     * 201901000 = 2019年1月     * 201903100 = 2019年3月上旬     * 201912300 = 2019年12月下旬     * 201906105 = 2019年6月5日     * 201908216 = 2019年8月16日  ## 検索パラメータ  ### OR 検索  パラメータタイプが `array` のキーについては、クエリパラメータで複数指定を行った場合、 指定された値のいずれかに一致する対象を検索する（ OR 検索）。  ex) `?layout_type_code=1&layout_type_code=2`  ### ソート順  `*.order` という名前のパラメータでソート順を指定可能。ascを指定したとき昇順、descを指定したとき降順となる。  ex) `?price.order=desc`  基本的にソート順は一つだけ指定する。 
 *
 * The version of the OpenAPI document: 6.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EsApi);
  }
}(this, function(expect, EsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EsApi.RentProperty();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RentProperty', function() {
    it('should create an instance of RentProperty', function() {
      // uncomment below and update the code to test RentProperty
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be.a(EsApi.RentProperty);
    });

    it('should have the property propertyFullKey (base name: "property_full_key")', function() {
      // uncomment below and update the code to test the property propertyFullKey
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property originalPropertyCodeText (base name: "original_property_code_text")', function() {
      // uncomment below and update the code to test the property originalPropertyCodeText
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyClass (base name: "property_class")', function() {
      // uncomment below and update the code to test the property propertyClass
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyClassCode (base name: "property_class_code")', function() {
      // uncomment below and update the code to test the property propertyClassCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyUse (base name: "property_use")', function() {
      // uncomment below and update the code to test the property propertyUse
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyUseCode (base name: "property_use_code")', function() {
      // uncomment below and update the code to test the property propertyUseCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyType (base name: "property_type")', function() {
      // uncomment below and update the code to test the property propertyType
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyTypeCode (base name: "property_type_code")', function() {
      // uncomment below and update the code to test the property propertyTypeCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property hasEntries (base name: "has_entries")', function() {
      // uncomment below and update the code to test the property hasEntries
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property currentStatus (base name: "current_status")', function() {
      // uncomment below and update the code to test the property currentStatus
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property currentStatusCode (base name: "current_status_code")', function() {
      // uncomment below and update the code to test the property currentStatusCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property departureDate (base name: "departure_date")', function() {
      // uncomment below and update the code to test the property departureDate
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property nameDisplayFlag (base name: "name_display_flag")', function() {
      // uncomment below and update the code to test the property nameDisplayFlag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property branchNumberDisplayFlag (base name: "branch_number_display_flag")', function() {
      // uncomment below and update the code to test the property branchNumberDisplayFlag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property roomNumberDisplayFlag (base name: "room_number_display_flag")', function() {
      // uncomment below and update the code to test the property roomNumberDisplayFlag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property mapMarkerDisplayFlag (base name: "map_marker_display_flag")', function() {
      // uncomment below and update the code to test the property mapMarkerDisplayFlag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property gas (base name: "gas")', function() {
      // uncomment below and update the code to test the property gas
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property gasCode (base name: "gas_code")', function() {
      // uncomment below and update the code to test the property gasCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property waterSupply (base name: "water_supply")', function() {
      // uncomment below and update the code to test the property waterSupply
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property waterSupplyCode (base name: "water_supply_code")', function() {
      // uncomment below and update the code to test the property waterSupplyCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property sewerage (base name: "sewerage")', function() {
      // uncomment below and update the code to test the property sewerage
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property sewerageCode (base name: "sewerage_code")', function() {
      // uncomment below and update the code to test the property sewerageCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property hasElectricity (base name: "has_electricity")', function() {
      // uncomment below and update the code to test the property hasElectricity
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property itJusetsuFlag (base name: "it_jusetsu_flag")', function() {
      // uncomment below and update the code to test the property itJusetsuFlag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property isNewlyBuilt (base name: "is_newly_built")', function() {
      // uncomment below and update the code to test the property isNewlyBuilt
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property newUsed (base name: "new_used")', function() {
      // uncomment below and update the code to test the property newUsed
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property newUsedCode (base name: "new_used_code")', function() {
      // uncomment below and update the code to test the property newUsedCode
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property panoramaFlag (base name: "panorama_flag")', function() {
      // uncomment below and update the code to test the property panoramaFlag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property websiteComment (base name: "website_comment")', function() {
      // uncomment below and update the code to test the property websiteComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property pdfComment (base name: "pdf_comment")', function() {
      // uncomment below and update the code to test the property pdfComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property tantoshaComment (base name: "tantosha_comment")', function() {
      // uncomment below and update the code to test the property tantoshaComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property salesPoint (base name: "sales_point")', function() {
      // uncomment below and update the code to test the property salesPoint
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property specialityComment (base name: "speciality_comment")', function() {
      // uncomment below and update the code to test the property specialityComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property specialityPdfComment (base name: "speciality_pdf_comment")', function() {
      // uncomment below and update the code to test the property specialityPdfComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property equipmentComment (base name: "equipment_comment")', function() {
      // uncomment below and update the code to test the property equipmentComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property equipmentPdfComment (base name: "equipment_pdf_comment")', function() {
      // uncomment below and update the code to test the property equipmentPdfComment
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property customerKey (base name: "customer_key")', function() {
      // uncomment below and update the code to test the property customerKey
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property agentGuid (base name: "agent_guid")', function() {
      // uncomment below and update the code to test the property agentGuid
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property staffGuid (base name: "staff_guid")', function() {
      // uncomment below and update the code to test the property staffGuid
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property contractCondition (base name: "contract_condition")', function() {
      // uncomment below and update the code to test the property contractCondition
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyParking (base name: "property_parking")', function() {
      // uncomment below and update the code to test the property propertyParking
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property propertyTag (base name: "property_tag")', function() {
      // uncomment below and update the code to test the property propertyTag
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property buildingGuid (base name: "building_guid")', function() {
      // uncomment below and update the code to test the property buildingGuid
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property dwellingUnit (base name: "dwelling_unit")', function() {
      // uncomment below and update the code to test the property dwellingUnit
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property transportation (base name: "transportation")', function() {
      // uncomment below and update the code to test the property transportation
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property otherTransportation (base name: "other_transportation")', function() {
      // uncomment below and update the code to test the property otherTransportation
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property institution (base name: "institution")', function() {
      // uncomment below and update the code to test the property institution
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property reform (base name: "reform")', function() {
      // uncomment below and update the code to test the property reform
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property companyRemark (base name: "company_remark")', function() {
      // uncomment below and update the code to test the property companyRemark
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property isPublished (base name: "is_published")', function() {
      // uncomment below and update the code to test the property isPublished
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property publishedDatetime (base name: "published_datetime")', function() {
      // uncomment below and update the code to test the property publishedDatetime
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdateDatetime (base name: "last_update_datetime")', function() {
      // uncomment below and update the code to test the property lastUpdateDatetime
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property nextRenewalDatetime (base name: "next_renewal_datetime")', function() {
      // uncomment below and update the code to test the property nextRenewalDatetime
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

    it('should have the property rentPickupFeature (base name: "rent_pickup_feature")', function() {
      // uncomment below and update the code to test the property rentPickupFeature
      //var instane = new EsApi.RentProperty();
      //expect(instance).to.be();
    });

  });

}));
