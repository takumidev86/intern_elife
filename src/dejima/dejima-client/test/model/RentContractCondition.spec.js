/**
 * ES 物件API
 * （株）いい生活 が提供予定の 物件情報API のインターフェイス仕様書  いい物件Oneに登録した賃貸物件情報を参照する物件参照API仕様について定める。  ※1: 開発中のため、実際のリリース時の仕様は異なる場合がございます。  ※2: 売買物件に関する仕様に関してはα版であり、今後大きな仕様の見直しを行う可能性がございます。  ## リソース仕様  ### 通信仕様  HTTP/2 および HTTP/1.1 をサポートする。通信はTLSで暗号化されたHTTPSのみを許可する。  ### リクエストヘッダ  リクエストヘッダには以下の指定を必須とする。  | No. | リクエストヘッダのフィールド名 | 指定値 | |:---:|:-------------------------------|:-------| | 1 | Accept | application/json | | 2 | X-Api-Key | 弊社が指定するキー。ご利用のお客様を特定するためのもの。 |  Acceptヘッダには、常にapplication/json を指定する。 これにより、レスポンスがJSONであることを指示する。  ### データフォーマットと文字コード  データフォーマットはJSON、文字コードはUTF-8とする。  ### データ型  通常のJSONの型以外に擬似型としていくつかのデータ型を用意している。 これは、JSON標準では表現しきれないデータや、不動産特有のデータを扱うために定義したもので使用する。 また、ここに記載の無いデータ型については、 OpenAPI Specification (Version 3.0.2) の DataTypes に準拠する。  * [DataTypes](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types)   | No. | 型 | 説明 | |:---:|:---|:-----| | 1 | string | JSON標準の文字列 | | 2 | int | JSON標準の整数 | | 3 | float | JSON標準の浮動小数点数 | | 4 | bool | JSON標準の真偽値 | | 5 | datetime | ISO8611フォーマットの日付時刻を表す文字列。YYYY-MM-DDTHH:MM:SS。 <br> 例: 2015-08-26T19:16:03 = 2015年8月26日19時16分03秒 | | 6 | date | ISO8611フォーマットの日付を表す文字列。YYYY-MM-DD。 <br> 例: 2015-08-26 = 2015年8月26日 | | 7 | datejun | 後述 |  #### datejun型  いい生活独自の日付と旬を表すフォーマット。YYYYMMJDD。  * YYYY: 西暦年 * MM: 月。01～12。ただし00とすることにより、年単位までの精度の数字を表現可能。 * J: 旬。1=上旬、2=中旬、3=下旬。 0とすることで月単位までの精度の数字を表現可能。 * DD: 日。01～31。ただし00とすることにより、旬単位までの精度の数字を表現可能。日単位の精度の場合、1～10日までは旬を1、11～20日までは旬を2、21日以降は旬を3と指定する必要がある。 * 例:     * 201900000 = 2019年     * 201901000 = 2019年1月     * 201903100 = 2019年3月上旬     * 201912300 = 2019年12月下旬     * 201906105 = 2019年6月5日     * 201908216 = 2019年8月16日  ## 検索パラメータ  ### OR 検索  パラメータタイプが `array` のキーについては、クエリパラメータで複数指定を行った場合、 指定された値のいずれかに一致する対象を検索する（ OR 検索）。  ex) `?layout_type_code=1&layout_type_code=2`  ### ソート順  `*.order` という名前のパラメータでソート順を指定可能。ascを指定したとき昇順、descを指定したとき降順となる。  ex) `?price.order=desc`  基本的にソート順は一つだけ指定する。 
 *
 * The version of the OpenAPI document: 6.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EsApi);
  }
}(this, function(expect, EsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EsApi.RentContractCondition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RentContractCondition', function() {
    it('should create an instance of RentContractCondition', function() {
      // uncomment below and update the code to test RentContractCondition
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be.a(EsApi.RentContractCondition);
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property priceUpdateDate (base name: "price_update_date")', function() {
      // uncomment below and update the code to test the property priceUpdateDate
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property pricePerTsubo (base name: "price_per_tsubo")', function() {
      // uncomment below and update the code to test the property pricePerTsubo
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property manageCost (base name: "manage_cost")', function() {
      // uncomment below and update the code to test the property manageCost
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property serviceFee (base name: "service_fee")', function() {
      // uncomment below and update the code to test the property serviceFee
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property deposit (base name: "deposit")', function() {
      // uncomment below and update the code to test the property deposit
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property keyMoney (base name: "key_money")', function() {
      // uncomment below and update the code to test the property keyMoney
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property repairCost (base name: "repair_cost")', function() {
      // uncomment below and update the code to test the property repairCost
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guaranteeAmortizationClass (base name: "guarantee_amortization_class")', function() {
      // uncomment below and update the code to test the property guaranteeAmortizationClass
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guaranteeAmortizationClassCode (base name: "guarantee_amortization_class_code")', function() {
      // uncomment below and update the code to test the property guaranteeAmortizationClassCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guaranteePrice (base name: "guarantee_price")', function() {
      // uncomment below and update the code to test the property guaranteePrice
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property amortizationExpense (base name: "amortization_expense")', function() {
      // uncomment below and update the code to test the property amortizationExpense
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property premium (base name: "premium")', function() {
      // uncomment below and update the code to test the property premium
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property fixturesCost (base name: "fixtures_cost")', function() {
      // uncomment below and update the code to test the property fixturesCost
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property tokuyuchin (base name: "tokuyuchin")', function() {
      // uncomment below and update the code to test the property tokuyuchin
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property isTokuyuchin (base name: "is_tokuyuchin")', function() {
      // uncomment below and update the code to test the property isTokuyuchin
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property renewalFee (base name: "renewal_fee")', function() {
      // uncomment below and update the code to test the property renewalFee
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property miscExpense (base name: "misc_expense")', function() {
      // uncomment below and update the code to test the property miscExpense
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property insurance (base name: "insurance")', function() {
      // uncomment below and update the code to test the property insurance
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property hasInsurance (base name: "has_insurance")', function() {
      // uncomment below and update the code to test the property hasInsurance
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property rentBrokerageAllocation (base name: "rent_brokerage_allocation")', function() {
      // uncomment below and update the code to test the property rentBrokerageAllocation
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property freeRent (base name: "free_rent")', function() {
      // uncomment below and update the code to test the property freeRent
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property otherInitialCost (base name: "other_initial_cost")', function() {
      // uncomment below and update the code to test the property otherInitialCost
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property otherMonthlyCost (base name: "other_monthly_cost")', function() {
      // uncomment below and update the code to test the property otherMonthlyCost
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property otherCostComment (base name: "other_cost_comment")', function() {
      // uncomment below and update the code to test the property otherCostComment
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property initialCostCreditCardAvailableFlag (base name: "initial_cost_credit_card_available_flag")', function() {
      // uncomment below and update the code to test the property initialCostCreditCardAvailableFlag
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property monthlyCostCreditCardAvailableFlag (base name: "monthly_cost_credit_card_available_flag")', function() {
      // uncomment below and update the code to test the property monthlyCostCreditCardAvailableFlag
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property initialCost (base name: "initial_cost")', function() {
      // uncomment below and update the code to test the property initialCost
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property initialCostCode (base name: "initial_cost_code")', function() {
      // uncomment below and update the code to test the property initialCostCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guarantorCompanyRequirements (base name: "guarantor_company_requirements")', function() {
      // uncomment below and update the code to test the property guarantorCompanyRequirements
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guarantorCompanyRequirementsCode (base name: "guarantor_company_requirements_code")', function() {
      // uncomment below and update the code to test the property guarantorCompanyRequirementsCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guarantorCompanyName (base name: "guarantor_company_name")', function() {
      // uncomment below and update the code to test the property guarantorCompanyName
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guarantorCompanyContractDetail (base name: "guarantor_company_contract_detail")', function() {
      // uncomment below and update the code to test the property guarantorCompanyContractDetail
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property noGuarantorFlag (base name: "no_guarantor_flag")', function() {
      // uncomment below and update the code to test the property noGuarantorFlag
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guarantorRequirements (base name: "guarantor_requirements")', function() {
      // uncomment below and update the code to test the property guarantorRequirements
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property guarantorRequirementsCode (base name: "guarantor_requirements_code")', function() {
      // uncomment below and update the code to test the property guarantorRequirementsCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property rentPeriod (base name: "rent_period")', function() {
      // uncomment below and update the code to test the property rentPeriod
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property availableDatejun (base name: "available_datejun")', function() {
      // uncomment below and update the code to test the property availableDatejun
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property available (base name: "available")', function() {
      // uncomment below and update the code to test the property available
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property availableCode (base name: "available_code")', function() {
      // uncomment below and update the code to test the property availableCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property rentTransactionForm (base name: "rent_transaction_form")', function() {
      // uncomment below and update the code to test the property rentTransactionForm
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property rentTransactionFormCode (base name: "rent_transaction_form_code")', function() {
      // uncomment below and update the code to test the property rentTransactionFormCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property studentRestriction (base name: "student_restriction")', function() {
      // uncomment below and update the code to test the property studentRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property studentRestrictionCode (base name: "student_restriction_code")', function() {
      // uncomment below and update the code to test the property studentRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property genderRestriction (base name: "gender_restriction")', function() {
      // uncomment below and update the code to test the property genderRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property genderRestrictionCode (base name: "gender_restriction_code")', function() {
      // uncomment below and update the code to test the property genderRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property kidsRestriction (base name: "kids_restriction")', function() {
      // uncomment below and update the code to test the property kidsRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property kidsRestrictionCode (base name: "kids_restriction_code")', function() {
      // uncomment below and update the code to test the property kidsRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property onePersonRestriction (base name: "one_person_restriction")', function() {
      // uncomment below and update the code to test the property onePersonRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property onePersonRestrictionCode (base name: "one_person_restriction_code")', function() {
      // uncomment below and update the code to test the property onePersonRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property twoPersonsRestriction (base name: "two_persons_restriction")', function() {
      // uncomment below and update the code to test the property twoPersonsRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property twoPersonsRestrictionCode (base name: "two_persons_restriction_code")', function() {
      // uncomment below and update the code to test the property twoPersonsRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property elderRestriction (base name: "elder_restriction")', function() {
      // uncomment below and update the code to test the property elderRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property elderRestrictionCode (base name: "elder_restriction_code")', function() {
      // uncomment below and update the code to test the property elderRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property corporateContractRestriction (base name: "corporate_contract_restriction")', function() {
      // uncomment below and update the code to test the property corporateContractRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property corporateContractRestrictionCode (base name: "corporate_contract_restriction_code")', function() {
      // uncomment below and update the code to test the property corporateContractRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property petRestriction (base name: "pet_restriction")', function() {
      // uncomment below and update the code to test the property petRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property petRestrictionCode (base name: "pet_restriction_code")', function() {
      // uncomment below and update the code to test the property petRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property officeUsageRestriction (base name: "office_usage_restriction")', function() {
      // uncomment below and update the code to test the property officeUsageRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property officeUsageRestrictionCode (base name: "office_usage_restriction_code")', function() {
      // uncomment below and update the code to test the property officeUsageRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property musicalInstrumentRestriction (base name: "musical_instrument_restriction")', function() {
      // uncomment below and update the code to test the property musicalInstrumentRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property musicalInstrumentRestrictionCode (base name: "musical_instrument_restriction_code")', function() {
      // uncomment below and update the code to test the property musicalInstrumentRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property restaurantUsageRestriction (base name: "restaurant_usage_restriction")', function() {
      // uncomment below and update the code to test the property restaurantUsageRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property restaurantUsageRestrictionCode (base name: "restaurant_usage_restriction_code")', function() {
      // uncomment below and update the code to test the property restaurantUsageRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property roomSharingRestriction (base name: "room_sharing_restriction")', function() {
      // uncomment below and update the code to test the property roomSharingRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property roomSharingRestrictionCode (base name: "room_sharing_restriction_code")', function() {
      // uncomment below and update the code to test the property roomSharingRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property foreignerRestriction (base name: "foreigner_restriction")', function() {
      // uncomment below and update the code to test the property foreignerRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property foreignerRestrictionCode (base name: "foreigner_restriction_code")', function() {
      // uncomment below and update the code to test the property foreignerRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property friendsRestriction (base name: "friends_restriction")', function() {
      // uncomment below and update the code to test the property friendsRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property friendsRestrictionCode (base name: "friends_restriction_code")', function() {
      // uncomment below and update the code to test the property friendsRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property foreignStudentRestriction (base name: "foreign_student_restriction")', function() {
      // uncomment below and update the code to test the property foreignStudentRestriction
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property foreignStudentRestrictionCode (base name: "foreign_student_restriction_code")', function() {
      // uncomment below and update the code to test the property foreignStudentRestrictionCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property depositForStudent (base name: "deposit_for_student")', function() {
      // uncomment below and update the code to test the property depositForStudent
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property depositForStudentCode (base name: "deposit_for_student_code")', function() {
      // uncomment below and update the code to test the property depositForStudentCode
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

    it('should have the property otherCondition (base name: "other_condition")', function() {
      // uncomment below and update the code to test the property otherCondition
      //var instane = new EsApi.RentContractCondition();
      //expect(instance).to.be();
    });

  });

}));
