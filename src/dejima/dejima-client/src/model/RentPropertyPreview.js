/**
 * ES 物件API
 * （株）いい生活 が提供予定の 物件情報API のインターフェイス仕様書  いい物件Oneに登録した賃貸物件情報を参照する物件参照API仕様について定める。  ※1: 開発中のため、実際のリリース時の仕様は異なる場合がございます。  ※2: 売買物件に関する仕様に関してはα版であり、今後大きな仕様の見直しを行う可能性がございます。  ## リソース仕様  ### 通信仕様  HTTP/2 および HTTP/1.1 をサポートする。通信はTLSで暗号化されたHTTPSのみを許可する。  ### リクエストヘッダ  リクエストヘッダには以下の指定を必須とする。  | No. | リクエストヘッダのフィールド名 | 指定値 | |:---:|:-------------------------------|:-------| | 1 | Accept | application/json | | 2 | X-Api-Key | 弊社が指定するキー。ご利用のお客様を特定するためのもの。 |  Acceptヘッダには、常にapplication/json を指定する。 これにより、レスポンスがJSONであることを指示する。  ### データフォーマットと文字コード  データフォーマットはJSON、文字コードはUTF-8とする。  ### データ型  通常のJSONの型以外に擬似型としていくつかのデータ型を用意している。 これは、JSON標準では表現しきれないデータや、不動産特有のデータを扱うために定義したもので使用する。 また、ここに記載の無いデータ型については、 OpenAPI Specification (Version 3.0.2) の DataTypes に準拠する。  * [DataTypes](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types)   | No. | 型 | 説明 | |:---:|:---|:-----| | 1 | string | JSON標準の文字列 | | 2 | int | JSON標準の整数 | | 3 | float | JSON標準の浮動小数点数 | | 4 | bool | JSON標準の真偽値 | | 5 | datetime | ISO8611フォーマットの日付時刻を表す文字列。YYYY-MM-DDTHH:MM:SS。 <br> 例: 2015-08-26T19:16:03 = 2015年8月26日19時16分03秒 | | 6 | date | ISO8611フォーマットの日付を表す文字列。YYYY-MM-DD。 <br> 例: 2015-08-26 = 2015年8月26日 | | 7 | datejun | 後述 |  #### datejun型  いい生活独自の日付と旬を表すフォーマット。YYYYMMJDD。  * YYYY: 西暦年 * MM: 月。01～12。ただし00とすることにより、年単位までの精度の数字を表現可能。 * J: 旬。1=上旬、2=中旬、3=下旬。 0とすることで月単位までの精度の数字を表現可能。 * DD: 日。01～31。ただし00とすることにより、旬単位までの精度の数字を表現可能。日単位の精度の場合、1～10日までは旬を1、11～20日までは旬を2、21日以降は旬を3と指定する必要がある。 * 例:     * 201900000 = 2019年     * 201901000 = 2019年1月     * 201903100 = 2019年3月上旬     * 201912300 = 2019年12月下旬     * 201906105 = 2019年6月5日     * 201908216 = 2019年8月16日  ## 検索パラメータ  ### OR 検索  パラメータタイプが `array` のキーについては、クエリパラメータで複数指定を行った場合、 指定された値のいずれかに一致する対象を検索する（ OR 検索）。  ex) `?layout_type_code=1&layout_type_code=2`  ### ソート順  `*.order` という名前のパラメータでソート順を指定可能。ascを指定したとき昇順、descを指定したとき降順となる。  ex) `?price.order=desc`  基本的にソート順は一つだけ指定する。 
 *
 * The version of the OpenAPI document: 6.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AreaWithMeasurementMethod from './AreaWithMeasurementMethod';
import BuildingPreview from './BuildingPreview';
import DateJun from './DateJun';
import Deposit from './Deposit';
import Insurance from './Insurance';
import IntRange from './IntRange';
import Price from './Price';
import PriceWithUnit from './PriceWithUnit';
import RentPickupFeature from './RentPickupFeature';
import Transportation from './Transportation';

/**
 * The RentPropertyPreview model module.
 * @module model/RentPropertyPreview
 * @version 6.1.3
 */
class RentPropertyPreview {
    /**
     * Constructs a new <code>RentPropertyPreview</code>.
     * 賃貸物件概要（区画住戸別表示）
     * @alias module:model/RentPropertyPreview
     * @param propertyFullKey {String} 
     * @param propertyUseCode {Number} 1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param propertyTypeCode {Number} 101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param nameDisplayFlag {Boolean} 
     * @param roomNumberDisplayFlag {Boolean} 
     * @param branchNumberDisplayFlag {Boolean} 
     * @param mapMarkerDisplayFlag {Boolean} 
     * @param panoramaFlag {Boolean} 
     * @param price {module:model/Price} 現貸料
     * @param otherInitialCostFreeFlag {Boolean} 
     * @param manageCostFreeCode {Number} 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param serviceFeeFreeCode {Number} 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param miscExpenseFreeCode {Number} 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param customerKey {Number} 
     * @param agentGuid {String} 
     * @param transportation {Array.<module:model/Transportation>} 
     */
    constructor(propertyFullKey, propertyUseCode, propertyTypeCode, nameDisplayFlag, roomNumberDisplayFlag, branchNumberDisplayFlag, mapMarkerDisplayFlag, panoramaFlag, price, otherInitialCostFreeFlag, manageCostFreeCode, serviceFeeFreeCode, miscExpenseFreeCode, customerKey, agentGuid, transportation) { 
        
        RentPropertyPreview.initialize(this, propertyFullKey, propertyUseCode, propertyTypeCode, nameDisplayFlag, roomNumberDisplayFlag, branchNumberDisplayFlag, mapMarkerDisplayFlag, panoramaFlag, price, otherInitialCostFreeFlag, manageCostFreeCode, serviceFeeFreeCode, miscExpenseFreeCode, customerKey, agentGuid, transportation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, propertyFullKey, propertyUseCode, propertyTypeCode, nameDisplayFlag, roomNumberDisplayFlag, branchNumberDisplayFlag, mapMarkerDisplayFlag, panoramaFlag, price, otherInitialCostFreeFlag, manageCostFreeCode, serviceFeeFreeCode, miscExpenseFreeCode, customerKey, agentGuid, transportation) { 
        obj['property_full_key'] = propertyFullKey;
        obj['property_use_code'] = propertyUseCode;
        obj['property_type_code'] = propertyTypeCode;
        obj['name_display_flag'] = nameDisplayFlag;
        obj['room_number_display_flag'] = roomNumberDisplayFlag;
        obj['branch_number_display_flag'] = branchNumberDisplayFlag;
        obj['map_marker_display_flag'] = mapMarkerDisplayFlag;
        obj['panorama_flag'] = panoramaFlag;
        obj['price'] = price;
        obj['other_initial_cost_free_flag'] = otherInitialCostFreeFlag;
        obj['manage_cost_free_code'] = manageCostFreeCode;
        obj['service_fee_free_code'] = serviceFeeFreeCode;
        obj['misc_expense_free_code'] = miscExpenseFreeCode;
        obj['customer_key'] = customerKey;
        obj['agent_guid'] = agentGuid;
        obj['transportation'] = transportation;
    }

    /**
     * Constructs a <code>RentPropertyPreview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RentPropertyPreview} obj Optional instance to populate.
     * @return {module:model/RentPropertyPreview} The populated <code>RentPropertyPreview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RentPropertyPreview();

            if (data.hasOwnProperty('property_full_key')) {
                obj['property_full_key'] = ApiClient.convertToType(data['property_full_key'], 'String');
            }
            if (data.hasOwnProperty('property_class')) {
                obj['property_class'] = ApiClient.convertToType(data['property_class'], 'String');
            }
            if (data.hasOwnProperty('property_class_code')) {
                obj['property_class_code'] = ApiClient.convertToType(data['property_class_code'], 'Number');
            }
            if (data.hasOwnProperty('property_use')) {
                obj['property_use'] = ApiClient.convertToType(data['property_use'], 'String');
            }
            if (data.hasOwnProperty('property_use_code')) {
                obj['property_use_code'] = ApiClient.convertToType(data['property_use_code'], 'Number');
            }
            if (data.hasOwnProperty('property_type')) {
                obj['property_type'] = ApiClient.convertToType(data['property_type'], 'String');
            }
            if (data.hasOwnProperty('property_type_code')) {
                obj['property_type_code'] = ApiClient.convertToType(data['property_type_code'], 'Number');
            }
            if (data.hasOwnProperty('room_number_text')) {
                obj['room_number_text'] = ApiClient.convertToType(data['room_number_text'], 'String');
            }
            if (data.hasOwnProperty('is_published')) {
                obj['is_published'] = ApiClient.convertToType(data['is_published'], 'Boolean');
            }
            if (data.hasOwnProperty('published_datetime')) {
                obj['published_datetime'] = ApiClient.convertToType(data['published_datetime'], 'Date');
            }
            if (data.hasOwnProperty('last_update_datetime')) {
                obj['last_update_datetime'] = ApiClient.convertToType(data['last_update_datetime'], 'Date');
            }
            if (data.hasOwnProperty('next_renewal_datetime')) {
                obj['next_renewal_datetime'] = ApiClient.convertToType(data['next_renewal_datetime'], 'Date');
            }
            if (data.hasOwnProperty('has_entries')) {
                obj['has_entries'] = ApiClient.convertToType(data['has_entries'], 'Boolean');
            }
            if (data.hasOwnProperty('current_status')) {
                obj['current_status'] = ApiClient.convertToType(data['current_status'], 'String');
            }
            if (data.hasOwnProperty('current_status_code')) {
                obj['current_status_code'] = ApiClient.convertToType(data['current_status_code'], 'Number');
            }
            if (data.hasOwnProperty('name_display_flag')) {
                obj['name_display_flag'] = ApiClient.convertToType(data['name_display_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('room_number_display_flag')) {
                obj['room_number_display_flag'] = ApiClient.convertToType(data['room_number_display_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('branch_number_display_flag')) {
                obj['branch_number_display_flag'] = ApiClient.convertToType(data['branch_number_display_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('map_marker_display_flag')) {
                obj['map_marker_display_flag'] = ApiClient.convertToType(data['map_marker_display_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('panorama_flag')) {
                obj['panorama_flag'] = ApiClient.convertToType(data['panorama_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('house_with_office_flag')) {
                obj['house_with_office_flag'] = ApiClient.convertToType(data['house_with_office_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('house_with_shops_flag')) {
                obj['house_with_shops_flag'] = ApiClient.convertToType(data['house_with_shops_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('it_jusetsu_flag')) {
                obj['it_jusetsu_flag'] = ApiClient.convertToType(data['it_jusetsu_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('gas')) {
                obj['gas'] = ApiClient.convertToType(data['gas'], 'String');
            }
            if (data.hasOwnProperty('gas_code')) {
                obj['gas_code'] = ApiClient.convertToType(data['gas_code'], 'Number');
            }
            if (data.hasOwnProperty('rent_transaction_form')) {
                obj['rent_transaction_form'] = ApiClient.convertToType(data['rent_transaction_form'], 'String');
            }
            if (data.hasOwnProperty('rent_transaction_form_code')) {
                obj['rent_transaction_form_code'] = ApiClient.convertToType(data['rent_transaction_form_code'], 'Number');
            }
            if (data.hasOwnProperty('residence_rent_period')) {
                obj['residence_rent_period'] = ApiClient.convertToType(data['residence_rent_period'], 'String');
            }
            if (data.hasOwnProperty('residence_rent_period_code')) {
                obj['residence_rent_period_code'] = ApiClient.convertToType(data['residence_rent_period_code'], 'Number');
            }
            if (data.hasOwnProperty('new_used')) {
                obj['new_used'] = ApiClient.convertToType(data['new_used'], 'String');
            }
            if (data.hasOwnProperty('new_used_code')) {
                obj['new_used_code'] = ApiClient.convertToType(data['new_used_code'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], Price);
            }
            if (data.hasOwnProperty('price_per_tsubo')) {
                obj['price_per_tsubo'] = ApiClient.convertToType(data['price_per_tsubo'], 'Number');
            }
            if (data.hasOwnProperty('price_update_date')) {
                obj['price_update_date'] = ApiClient.convertToType(data['price_update_date'], 'Date');
            }
            if (data.hasOwnProperty('misc_expense')) {
                obj['misc_expense'] = ApiClient.convertToType(data['misc_expense'], PriceWithUnit);
            }
            if (data.hasOwnProperty('has_insurance')) {
                obj['has_insurance'] = ApiClient.convertToType(data['has_insurance'], 'Boolean');
            }
            if (data.hasOwnProperty('insurance')) {
                obj['insurance'] = ApiClient.convertToType(data['insurance'], Insurance);
            }
            if (data.hasOwnProperty('key_money')) {
                obj['key_money'] = ApiClient.convertToType(data['key_money'], PriceWithUnit);
            }
            if (data.hasOwnProperty('deposit')) {
                obj['deposit'] = ApiClient.convertToType(data['deposit'], Deposit);
            }
            if (data.hasOwnProperty('repair_cost')) {
                obj['repair_cost'] = ApiClient.convertToType(data['repair_cost'], PriceWithUnit);
            }
            if (data.hasOwnProperty('guarantee_price')) {
                obj['guarantee_price'] = ApiClient.convertToType(data['guarantee_price'], PriceWithUnit);
            }
            if (data.hasOwnProperty('amortization_expense')) {
                obj['amortization_expense'] = ApiClient.convertToType(data['amortization_expense'], PriceWithUnit);
            }
            if (data.hasOwnProperty('premium')) {
                obj['premium'] = ApiClient.convertToType(data['premium'], PriceWithUnit);
            }
            if (data.hasOwnProperty('manage_cost')) {
                obj['manage_cost'] = ApiClient.convertToType(data['manage_cost'], PriceWithUnit);
            }
            if (data.hasOwnProperty('service_fee')) {
                obj['service_fee'] = ApiClient.convertToType(data['service_fee'], PriceWithUnit);
            }
            if (data.hasOwnProperty('is_tokuyuchin')) {
                obj['is_tokuyuchin'] = ApiClient.convertToType(data['is_tokuyuchin'], 'Boolean');
            }
            if (data.hasOwnProperty('initial_cost_credit_card_available_flag')) {
                obj['initial_cost_credit_card_available_flag'] = ApiClient.convertToType(data['initial_cost_credit_card_available_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('monthly_cost_credit_card_available_flag')) {
                obj['monthly_cost_credit_card_available_flag'] = ApiClient.convertToType(data['monthly_cost_credit_card_available_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('other_initial_cost_free_flag')) {
                obj['other_initial_cost_free_flag'] = ApiClient.convertToType(data['other_initial_cost_free_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('manage_cost_free')) {
                obj['manage_cost_free'] = ApiClient.convertToType(data['manage_cost_free'], 'String');
            }
            if (data.hasOwnProperty('manage_cost_free_code')) {
                obj['manage_cost_free_code'] = ApiClient.convertToType(data['manage_cost_free_code'], 'Number');
            }
            if (data.hasOwnProperty('service_fee_free')) {
                obj['service_fee_free'] = ApiClient.convertToType(data['service_fee_free'], 'String');
            }
            if (data.hasOwnProperty('service_fee_free_code')) {
                obj['service_fee_free_code'] = ApiClient.convertToType(data['service_fee_free_code'], 'Number');
            }
            if (data.hasOwnProperty('misc_expense_free')) {
                obj['misc_expense_free'] = ApiClient.convertToType(data['misc_expense_free'], 'String');
            }
            if (data.hasOwnProperty('misc_expense_free_code')) {
                obj['misc_expense_free_code'] = ApiClient.convertToType(data['misc_expense_free_code'], 'Number');
            }
            if (data.hasOwnProperty('no_guarantor_flag')) {
                obj['no_guarantor_flag'] = ApiClient.convertToType(data['no_guarantor_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('guarantor_requirements')) {
                obj['guarantor_requirements'] = ApiClient.convertToType(data['guarantor_requirements'], 'String');
            }
            if (data.hasOwnProperty('guarantor_requirements_code')) {
                obj['guarantor_requirements_code'] = ApiClient.convertToType(data['guarantor_requirements_code'], 'Number');
            }
            if (data.hasOwnProperty('initial_cost')) {
                obj['initial_cost'] = ApiClient.convertToType(data['initial_cost'], 'String');
            }
            if (data.hasOwnProperty('initial_cost_code')) {
                obj['initial_cost_code'] = ApiClient.convertToType(data['initial_cost_code'], 'Number');
            }
            if (data.hasOwnProperty('student_restriction')) {
                obj['student_restriction'] = ApiClient.convertToType(data['student_restriction'], 'String');
            }
            if (data.hasOwnProperty('student_restriction_code')) {
                obj['student_restriction_code'] = ApiClient.convertToType(data['student_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('gender_restriction')) {
                obj['gender_restriction'] = ApiClient.convertToType(data['gender_restriction'], 'String');
            }
            if (data.hasOwnProperty('gender_restriction_code')) {
                obj['gender_restriction_code'] = ApiClient.convertToType(data['gender_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('kids_restriction')) {
                obj['kids_restriction'] = ApiClient.convertToType(data['kids_restriction'], 'String');
            }
            if (data.hasOwnProperty('kids_restriction_code')) {
                obj['kids_restriction_code'] = ApiClient.convertToType(data['kids_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('one_person_restriction')) {
                obj['one_person_restriction'] = ApiClient.convertToType(data['one_person_restriction'], 'String');
            }
            if (data.hasOwnProperty('one_person_restriction_code')) {
                obj['one_person_restriction_code'] = ApiClient.convertToType(data['one_person_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('two_persons_restriction')) {
                obj['two_persons_restriction'] = ApiClient.convertToType(data['two_persons_restriction'], 'String');
            }
            if (data.hasOwnProperty('two_persons_restriction_code')) {
                obj['two_persons_restriction_code'] = ApiClient.convertToType(data['two_persons_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('elder_restriction')) {
                obj['elder_restriction'] = ApiClient.convertToType(data['elder_restriction'], 'String');
            }
            if (data.hasOwnProperty('elder_restriction_code')) {
                obj['elder_restriction_code'] = ApiClient.convertToType(data['elder_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('corporate_contract_restriction')) {
                obj['corporate_contract_restriction'] = ApiClient.convertToType(data['corporate_contract_restriction'], 'String');
            }
            if (data.hasOwnProperty('corporate_contract_restriction_code')) {
                obj['corporate_contract_restriction_code'] = ApiClient.convertToType(data['corporate_contract_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('pet_restriction')) {
                obj['pet_restriction'] = ApiClient.convertToType(data['pet_restriction'], 'String');
            }
            if (data.hasOwnProperty('pet_restriction_code')) {
                obj['pet_restriction_code'] = ApiClient.convertToType(data['pet_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('office_usage_restriction')) {
                obj['office_usage_restriction'] = ApiClient.convertToType(data['office_usage_restriction'], 'String');
            }
            if (data.hasOwnProperty('office_usage_restriction_code')) {
                obj['office_usage_restriction_code'] = ApiClient.convertToType(data['office_usage_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('musical_instrument_restriction')) {
                obj['musical_instrument_restriction'] = ApiClient.convertToType(data['musical_instrument_restriction'], 'String');
            }
            if (data.hasOwnProperty('musical_instrument_restriction_code')) {
                obj['musical_instrument_restriction_code'] = ApiClient.convertToType(data['musical_instrument_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('restaurant_usage_restriction')) {
                obj['restaurant_usage_restriction'] = ApiClient.convertToType(data['restaurant_usage_restriction'], 'String');
            }
            if (data.hasOwnProperty('restaurant_usage_restriction_code')) {
                obj['restaurant_usage_restriction_code'] = ApiClient.convertToType(data['restaurant_usage_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('room_sharing_restriction')) {
                obj['room_sharing_restriction'] = ApiClient.convertToType(data['room_sharing_restriction'], 'String');
            }
            if (data.hasOwnProperty('room_sharing_restriction_code')) {
                obj['room_sharing_restriction_code'] = ApiClient.convertToType(data['room_sharing_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('foreigner_restriction')) {
                obj['foreigner_restriction'] = ApiClient.convertToType(data['foreigner_restriction'], 'String');
            }
            if (data.hasOwnProperty('foreigner_restriction_code')) {
                obj['foreigner_restriction_code'] = ApiClient.convertToType(data['foreigner_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('friends_restriction')) {
                obj['friends_restriction'] = ApiClient.convertToType(data['friends_restriction'], 'String');
            }
            if (data.hasOwnProperty('friends_restriction_code')) {
                obj['friends_restriction_code'] = ApiClient.convertToType(data['friends_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('foreign_student_restriction')) {
                obj['foreign_student_restriction'] = ApiClient.convertToType(data['foreign_student_restriction'], 'String');
            }
            if (data.hasOwnProperty('foreign_student_restriction_code')) {
                obj['foreign_student_restriction_code'] = ApiClient.convertToType(data['foreign_student_restriction_code'], 'Number');
            }
            if (data.hasOwnProperty('deposit_for_student')) {
                obj['deposit_for_student'] = ApiClient.convertToType(data['deposit_for_student'], 'String');
            }
            if (data.hasOwnProperty('deposit_for_student_code')) {
                obj['deposit_for_student_code'] = ApiClient.convertToType(data['deposit_for_student_code'], 'Number');
            }
            if (data.hasOwnProperty('dwelling_unit_use')) {
                obj['dwelling_unit_use'] = ApiClient.convertToType(data['dwelling_unit_use'], 'String');
            }
            if (data.hasOwnProperty('dwelling_unit_use_code')) {
                obj['dwelling_unit_use_code'] = ApiClient.convertToType(data['dwelling_unit_use_code'], 'Number');
            }
            if (data.hasOwnProperty('room_count')) {
                obj['room_count'] = ApiClient.convertToType(data['room_count'], 'Number');
            }
            if (data.hasOwnProperty('layout_type')) {
                obj['layout_type'] = ApiClient.convertToType(data['layout_type'], 'String');
            }
            if (data.hasOwnProperty('layout_type_code')) {
                obj['layout_type_code'] = ApiClient.convertToType(data['layout_type_code'], 'Number');
            }
            if (data.hasOwnProperty('layout_text')) {
                obj['layout_text'] = ApiClient.convertToType(data['layout_text'], 'String');
            }
            if (data.hasOwnProperty('orientation')) {
                obj['orientation'] = ApiClient.convertToType(data['orientation'], 'String');
            }
            if (data.hasOwnProperty('orientation_code')) {
                obj['orientation_code'] = ApiClient.convertToType(data['orientation_code'], 'Number');
            }
            if (data.hasOwnProperty('floor_number')) {
                obj['floor_number'] = ApiClient.convertToType(data['floor_number'], 'String');
            }
            if (data.hasOwnProperty('exclusive_area')) {
                obj['exclusive_area'] = ApiClient.convertToType(data['exclusive_area'], AreaWithMeasurementMethod);
            }
            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'String');
            }
            if (data.hasOwnProperty('available_code')) {
                obj['available_code'] = ApiClient.convertToType(data['available_code'], 'Number');
            }
            if (data.hasOwnProperty('available_datejun')) {
                obj['available_datejun'] = ApiClient.convertToType(data['available_datejun'], DateJun);
            }
            if (data.hasOwnProperty('departure_date')) {
                obj['departure_date'] = ApiClient.convertToType(data['departure_date'], 'Date');
            }
            if (data.hasOwnProperty('sales_point')) {
                obj['sales_point'] = ApiClient.convertToType(data['sales_point'], 'String');
            }
            if (data.hasOwnProperty('message_to_other_company')) {
                obj['message_to_other_company'] = ApiClient.convertToType(data['message_to_other_company'], 'String');
            }
            if (data.hasOwnProperty('original_property_code_text')) {
                obj['original_property_code_text'] = ApiClient.convertToType(data['original_property_code_text'], 'String');
            }
            if (data.hasOwnProperty('advertise_flag')) {
                obj['advertise_flag'] = ApiClient.convertToType(data['advertise_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('company_remark')) {
                obj['company_remark'] = ApiClient.convertToType(data['company_remark'], 'String');
            }
            if (data.hasOwnProperty('advertising_fee')) {
                obj['advertising_fee'] = ApiClient.convertToType(data['advertising_fee'], PriceWithUnit);
            }
            if (data.hasOwnProperty('advertising_fee_update_date')) {
                obj['advertising_fee_update_date'] = ApiClient.convertToType(data['advertising_fee_update_date'], 'Date');
            }
            if (data.hasOwnProperty('customer_key')) {
                obj['customer_key'] = ApiClient.convertToType(data['customer_key'], 'Number');
            }
            if (data.hasOwnProperty('agent_guid')) {
                obj['agent_guid'] = ApiClient.convertToType(data['agent_guid'], 'String');
            }
            if (data.hasOwnProperty('staff_guid')) {
                obj['staff_guid'] = ApiClient.convertToType(data['staff_guid'], 'String');
            }
            if (data.hasOwnProperty('transportation')) {
                obj['transportation'] = ApiClient.convertToType(data['transportation'], [Transportation]);
            }
            if (data.hasOwnProperty('parking_availability')) {
                obj['parking_availability'] = ApiClient.convertToType(data['parking_availability'], 'String');
            }
            if (data.hasOwnProperty('parking_availability_code')) {
                obj['parking_availability_code'] = ApiClient.convertToType(data['parking_availability_code'], 'Number');
            }
            if (data.hasOwnProperty('has_bike_parking')) {
                obj['has_bike_parking'] = ApiClient.convertToType(data['has_bike_parking'], 'Boolean');
            }
            if (data.hasOwnProperty('has_motorbike_parking')) {
                obj['has_motorbike_parking'] = ApiClient.convertToType(data['has_motorbike_parking'], 'Boolean');
            }
            if (data.hasOwnProperty('parking_price_range')) {
                obj['parking_price_range'] = ApiClient.convertToType(data['parking_price_range'], IntRange);
            }
            if (data.hasOwnProperty('b2b_custom_flag')) {
                obj['b2b_custom_flag'] = ApiClient.convertToType(data['b2b_custom_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('b2b_free_comment')) {
                obj['b2b_free_comment'] = ApiClient.convertToType(data['b2b_free_comment'], 'String');
            }
            if (data.hasOwnProperty('b2b_remark')) {
                obj['b2b_remark'] = ApiClient.convertToType(data['b2b_remark'], 'String');
            }
            if (data.hasOwnProperty('search_area')) {
                obj['search_area'] = ApiClient.convertToType(data['search_area'], 'Number');
            }
            if (data.hasOwnProperty('pickup_feature')) {
                obj['pickup_feature'] = ApiClient.convertToType(data['pickup_feature'], RentPickupFeature);
            }
            if (data.hasOwnProperty('building_preview')) {
                obj['building_preview'] = ApiClient.convertToType(data['building_preview'], BuildingPreview);
            }
        }
        return obj;
    }


}

/**
 * @member {String} property_full_key
 */
RentPropertyPreview.prototype['property_full_key'] = undefined;

/**
 * @member {String} property_class
 */
RentPropertyPreview.prototype['property_class'] = undefined;

/**
 * 1: 土地<br/>2: 建物<br/>3: 区画<br/>4: 建物付帯設備
 * @member {Number} property_class_code
 */
RentPropertyPreview.prototype['property_class_code'] = undefined;

/**
 * @member {String} property_use
 */
RentPropertyPreview.prototype['property_use'] = undefined;

/**
 * 1: 居住用<br/>2: 事業用<br/>3: 投資用
 * @member {Number} property_use_code
 */
RentPropertyPreview.prototype['property_use_code'] = undefined;

/**
 * @member {String} property_type
 */
RentPropertyPreview.prototype['property_type'] = undefined;

/**
 * 101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
 * @member {Number} property_type_code
 */
RentPropertyPreview.prototype['property_type_code'] = undefined;

/**
 * @member {String} room_number_text
 */
RentPropertyPreview.prototype['room_number_text'] = undefined;

/**
 * @member {Boolean} is_published
 */
RentPropertyPreview.prototype['is_published'] = undefined;

/**
 * @member {Date} published_datetime
 */
RentPropertyPreview.prototype['published_datetime'] = undefined;

/**
 * @member {Date} last_update_datetime
 */
RentPropertyPreview.prototype['last_update_datetime'] = undefined;

/**
 * @member {Date} next_renewal_datetime
 */
RentPropertyPreview.prototype['next_renewal_datetime'] = undefined;

/**
 * @member {Boolean} has_entries
 */
RentPropertyPreview.prototype['has_entries'] = undefined;

/**
 * @member {String} current_status
 */
RentPropertyPreview.prototype['current_status'] = undefined;

/**
 * 1: 居住中<br/>2: 空室<br/>3: 建築中<br/>4: 退去予定<br/>5: 改装中<br/>6: 完成済
 * @member {Number} current_status_code
 */
RentPropertyPreview.prototype['current_status_code'] = undefined;

/**
 * @member {Boolean} name_display_flag
 */
RentPropertyPreview.prototype['name_display_flag'] = undefined;

/**
 * @member {Boolean} room_number_display_flag
 */
RentPropertyPreview.prototype['room_number_display_flag'] = undefined;

/**
 * @member {Boolean} branch_number_display_flag
 */
RentPropertyPreview.prototype['branch_number_display_flag'] = undefined;

/**
 * @member {Boolean} map_marker_display_flag
 */
RentPropertyPreview.prototype['map_marker_display_flag'] = undefined;

/**
 * @member {Boolean} panorama_flag
 */
RentPropertyPreview.prototype['panorama_flag'] = undefined;

/**
 * @member {Boolean} house_with_office_flag
 */
RentPropertyPreview.prototype['house_with_office_flag'] = undefined;

/**
 * @member {Boolean} house_with_shops_flag
 */
RentPropertyPreview.prototype['house_with_shops_flag'] = undefined;

/**
 * @member {Boolean} it_jusetsu_flag
 */
RentPropertyPreview.prototype['it_jusetsu_flag'] = undefined;

/**
 * @member {String} gas
 */
RentPropertyPreview.prototype['gas'] = undefined;

/**
 * 1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
 * @member {Number} gas_code
 */
RentPropertyPreview.prototype['gas_code'] = undefined;

/**
 * @member {String} rent_transaction_form
 */
RentPropertyPreview.prototype['rent_transaction_form'] = undefined;

/**
 * 1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
 * @member {Number} rent_transaction_form_code
 */
RentPropertyPreview.prototype['rent_transaction_form_code'] = undefined;

/**
 * @member {String} residence_rent_period
 */
RentPropertyPreview.prototype['residence_rent_period'] = undefined;

/**
 * @member {Number} residence_rent_period_code
 */
RentPropertyPreview.prototype['residence_rent_period_code'] = undefined;

/**
 * @member {String} new_used
 */
RentPropertyPreview.prototype['new_used'] = undefined;

/**
 * @member {Number} new_used_code
 */
RentPropertyPreview.prototype['new_used_code'] = undefined;

/**
 * 現貸料
 * @member {module:model/Price} price
 */
RentPropertyPreview.prototype['price'] = undefined;

/**
 * @member {Number} price_per_tsubo
 */
RentPropertyPreview.prototype['price_per_tsubo'] = undefined;

/**
 * @member {Date} price_update_date
 */
RentPropertyPreview.prototype['price_update_date'] = undefined;

/**
 * 雑費
 * @member {module:model/PriceWithUnit} misc_expense
 */
RentPropertyPreview.prototype['misc_expense'] = undefined;

/**
 * @member {Boolean} has_insurance
 */
RentPropertyPreview.prototype['has_insurance'] = undefined;

/**
 * @member {module:model/Insurance} insurance
 */
RentPropertyPreview.prototype['insurance'] = undefined;

/**
 * 礼金
 * @member {module:model/PriceWithUnit} key_money
 */
RentPropertyPreview.prototype['key_money'] = undefined;

/**
 * @member {module:model/Deposit} deposit
 */
RentPropertyPreview.prototype['deposit'] = undefined;

/**
 * 敷引金
 * @member {module:model/PriceWithUnit} repair_cost
 */
RentPropertyPreview.prototype['repair_cost'] = undefined;

/**
 * 保証金
 * @member {module:model/PriceWithUnit} guarantee_price
 */
RentPropertyPreview.prototype['guarantee_price'] = undefined;

/**
 * 償却金
 * @member {module:model/PriceWithUnit} amortization_expense
 */
RentPropertyPreview.prototype['amortization_expense'] = undefined;

/**
 * 権利金
 * @member {module:model/PriceWithUnit} premium
 */
RentPropertyPreview.prototype['premium'] = undefined;

/**
 * 管理費
 * @member {module:model/PriceWithUnit} manage_cost
 */
RentPropertyPreview.prototype['manage_cost'] = undefined;

/**
 * 共益費
 * @member {module:model/PriceWithUnit} service_fee
 */
RentPropertyPreview.prototype['service_fee'] = undefined;

/**
 * @member {Boolean} is_tokuyuchin
 */
RentPropertyPreview.prototype['is_tokuyuchin'] = undefined;

/**
 * @member {Boolean} initial_cost_credit_card_available_flag
 */
RentPropertyPreview.prototype['initial_cost_credit_card_available_flag'] = undefined;

/**
 * @member {Boolean} monthly_cost_credit_card_available_flag
 */
RentPropertyPreview.prototype['monthly_cost_credit_card_available_flag'] = undefined;

/**
 * @member {Boolean} other_initial_cost_free_flag
 */
RentPropertyPreview.prototype['other_initial_cost_free_flag'] = undefined;

/**
 * @member {String} manage_cost_free
 */
RentPropertyPreview.prototype['manage_cost_free'] = undefined;

/**
 * 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
 * @member {Number} manage_cost_free_code
 */
RentPropertyPreview.prototype['manage_cost_free_code'] = undefined;

/**
 * @member {String} service_fee_free
 */
RentPropertyPreview.prototype['service_fee_free'] = undefined;

/**
 * 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
 * @member {Number} service_fee_free_code
 */
RentPropertyPreview.prototype['service_fee_free_code'] = undefined;

/**
 * @member {String} misc_expense_free
 */
RentPropertyPreview.prototype['misc_expense_free'] = undefined;

/**
 * 0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
 * @member {Number} misc_expense_free_code
 */
RentPropertyPreview.prototype['misc_expense_free_code'] = undefined;

/**
 * 非推奨のため代わりにguarantor_requirements_codeを使うこと。
 * @member {Boolean} no_guarantor_flag
 * @default false
 */
RentPropertyPreview.prototype['no_guarantor_flag'] = false;

/**
 * @member {String} guarantor_requirements
 */
RentPropertyPreview.prototype['guarantor_requirements'] = undefined;

/**
 * 1: 要<br/>2: 不要<br/>3: 未入力
 * @member {Number} guarantor_requirements_code
 * @default 3
 */
RentPropertyPreview.prototype['guarantor_requirements_code'] = 3;

/**
 * @member {String} initial_cost
 */
RentPropertyPreview.prototype['initial_cost'] = undefined;

/**
 * 1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
 * @member {Number} initial_cost_code
 * @default 99
 */
RentPropertyPreview.prototype['initial_cost_code'] = 99;

/**
 * @member {String} student_restriction
 */
RentPropertyPreview.prototype['student_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
 * @member {Number} student_restriction_code
 */
RentPropertyPreview.prototype['student_restriction_code'] = undefined;

/**
 * @member {String} gender_restriction
 */
RentPropertyPreview.prototype['gender_restriction'] = undefined;

/**
 * 1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
 * @member {Number} gender_restriction_code
 */
RentPropertyPreview.prototype['gender_restriction_code'] = undefined;

/**
 * @member {String} kids_restriction
 */
RentPropertyPreview.prototype['kids_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} kids_restriction_code
 */
RentPropertyPreview.prototype['kids_restriction_code'] = undefined;

/**
 * @member {String} one_person_restriction
 */
RentPropertyPreview.prototype['one_person_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
 * @member {Number} one_person_restriction_code
 */
RentPropertyPreview.prototype['one_person_restriction_code'] = undefined;

/**
 * @member {String} two_persons_restriction
 */
RentPropertyPreview.prototype['two_persons_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
 * @member {Number} two_persons_restriction_code
 */
RentPropertyPreview.prototype['two_persons_restriction_code'] = undefined;

/**
 * @member {String} elder_restriction
 */
RentPropertyPreview.prototype['elder_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
 * @member {Number} elder_restriction_code
 */
RentPropertyPreview.prototype['elder_restriction_code'] = undefined;

/**
 * @member {String} corporate_contract_restriction
 */
RentPropertyPreview.prototype['corporate_contract_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
 * @member {Number} corporate_contract_restriction_code
 */
RentPropertyPreview.prototype['corporate_contract_restriction_code'] = undefined;

/**
 * @member {String} pet_restriction
 */
RentPropertyPreview.prototype['pet_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} pet_restriction_code
 */
RentPropertyPreview.prototype['pet_restriction_code'] = undefined;

/**
 * @member {String} office_usage_restriction
 */
RentPropertyPreview.prototype['office_usage_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} office_usage_restriction_code
 */
RentPropertyPreview.prototype['office_usage_restriction_code'] = undefined;

/**
 * @member {String} musical_instrument_restriction
 */
RentPropertyPreview.prototype['musical_instrument_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} musical_instrument_restriction_code
 */
RentPropertyPreview.prototype['musical_instrument_restriction_code'] = undefined;

/**
 * @member {String} restaurant_usage_restriction
 */
RentPropertyPreview.prototype['restaurant_usage_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} restaurant_usage_restriction_code
 */
RentPropertyPreview.prototype['restaurant_usage_restriction_code'] = undefined;

/**
 * @member {String} room_sharing_restriction
 */
RentPropertyPreview.prototype['room_sharing_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} room_sharing_restriction_code
 */
RentPropertyPreview.prototype['room_sharing_restriction_code'] = undefined;

/**
 * @member {String} foreigner_restriction
 */
RentPropertyPreview.prototype['foreigner_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} foreigner_restriction_code
 */
RentPropertyPreview.prototype['foreigner_restriction_code'] = undefined;

/**
 * @member {String} friends_restriction
 */
RentPropertyPreview.prototype['friends_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} friends_restriction_code
 */
RentPropertyPreview.prototype['friends_restriction_code'] = undefined;

/**
 * @member {String} foreign_student_restriction
 */
RentPropertyPreview.prototype['foreign_student_restriction'] = undefined;

/**
 * 1: 不可<br/>2: 可<br/>3: 相談
 * @member {Number} foreign_student_restriction_code
 */
RentPropertyPreview.prototype['foreign_student_restriction_code'] = undefined;

/**
 * @member {String} deposit_for_student
 */
RentPropertyPreview.prototype['deposit_for_student'] = undefined;

/**
 * 1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
 * @member {Number} deposit_for_student_code
 */
RentPropertyPreview.prototype['deposit_for_student_code'] = undefined;

/**
 * @member {String} dwelling_unit_use
 */
RentPropertyPreview.prototype['dwelling_unit_use'] = undefined;

/**
 * 1: 住居<br/>2: 店舗<br/>3: 事務所<br/>4: 駐車場<br/>5: 駐輪場<br/>6: バイク置場<br/>7: 倉庫<br/>8: トランクルーム
 * @member {Number} dwelling_unit_use_code
 */
RentPropertyPreview.prototype['dwelling_unit_use_code'] = undefined;

/**
 * @member {Number} room_count
 */
RentPropertyPreview.prototype['room_count'] = undefined;

/**
 * @member {String} layout_type
 */
RentPropertyPreview.prototype['layout_type'] = undefined;

/**
 * 1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
 * @member {Number} layout_type_code
 */
RentPropertyPreview.prototype['layout_type_code'] = undefined;

/**
 * `room_count` と `layout_type` を組み合わせて、一般的な間取りの文字列表現を返す。         ex) 1DK, 2LDK
 * @member {String} layout_text
 */
RentPropertyPreview.prototype['layout_text'] = undefined;

/**
 * @member {String} orientation
 */
RentPropertyPreview.prototype['orientation'] = undefined;

/**
 * 1: 東<br/>2: 西<br/>3: 南<br/>4: 北<br/>5: 北東<br/>6: 北西<br/>7: 南東<br/>8: 南西
 * @member {Number} orientation_code
 */
RentPropertyPreview.prototype['orientation_code'] = undefined;

/**
 * @member {String} floor_number
 */
RentPropertyPreview.prototype['floor_number'] = undefined;

/**
 * 専有面積 単位: 平方メートル 計測方法: 壁芯 内法 登記簿
 * @member {module:model/AreaWithMeasurementMethod} exclusive_area
 */
RentPropertyPreview.prototype['exclusive_area'] = undefined;

/**
 * @member {String} available
 */
RentPropertyPreview.prototype['available'] = undefined;

/**
 * 1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
 * @member {Number} available_code
 */
RentPropertyPreview.prototype['available_code'] = undefined;

/**
 * 入居可能日／引渡可能日
 * @member {module:model/DateJun} available_datejun
 */
RentPropertyPreview.prototype['available_datejun'] = undefined;

/**
 * @member {Date} departure_date
 */
RentPropertyPreview.prototype['departure_date'] = undefined;

/**
 * @member {String} sales_point
 */
RentPropertyPreview.prototype['sales_point'] = undefined;

/**
 * @member {String} message_to_other_company
 */
RentPropertyPreview.prototype['message_to_other_company'] = undefined;

/**
 * @member {String} original_property_code_text
 */
RentPropertyPreview.prototype['original_property_code_text'] = undefined;

/**
 * @member {Boolean} advertise_flag
 */
RentPropertyPreview.prototype['advertise_flag'] = undefined;

/**
 * @member {String} company_remark
 */
RentPropertyPreview.prototype['company_remark'] = undefined;

/**
 * 広告料
 * @member {module:model/PriceWithUnit} advertising_fee
 */
RentPropertyPreview.prototype['advertising_fee'] = undefined;

/**
 * 広告料更新日
 * @member {Date} advertising_fee_update_date
 */
RentPropertyPreview.prototype['advertising_fee_update_date'] = undefined;

/**
 * @member {Number} customer_key
 */
RentPropertyPreview.prototype['customer_key'] = undefined;

/**
 * @member {String} agent_guid
 */
RentPropertyPreview.prototype['agent_guid'] = undefined;

/**
 * @member {String} staff_guid
 */
RentPropertyPreview.prototype['staff_guid'] = undefined;

/**
 * @member {Array.<module:model/Transportation>} transportation
 */
RentPropertyPreview.prototype['transportation'] = undefined;

/**
 * @member {String} parking_availability
 */
RentPropertyPreview.prototype['parking_availability'] = undefined;

/**
 * 1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
 * @member {Number} parking_availability_code
 */
RentPropertyPreview.prototype['parking_availability_code'] = undefined;

/**
 * @member {Boolean} has_bike_parking
 */
RentPropertyPreview.prototype['has_bike_parking'] = undefined;

/**
 * @member {Boolean} has_motorbike_parking
 */
RentPropertyPreview.prototype['has_motorbike_parking'] = undefined;

/**
 * @member {module:model/IntRange} parking_price_range
 */
RentPropertyPreview.prototype['parking_price_range'] = undefined;

/**
 * @member {Boolean} b2b_custom_flag
 */
RentPropertyPreview.prototype['b2b_custom_flag'] = undefined;

/**
 * @member {String} b2b_free_comment
 */
RentPropertyPreview.prototype['b2b_free_comment'] = undefined;

/**
 * @member {String} b2b_remark
 */
RentPropertyPreview.prototype['b2b_remark'] = undefined;

/**
 * @member {Number} search_area
 */
RentPropertyPreview.prototype['search_area'] = undefined;

/**
 * @member {module:model/RentPickupFeature} pickup_feature
 */
RentPropertyPreview.prototype['pickup_feature'] = undefined;

/**
 * @member {module:model/BuildingPreview} building_preview
 */
RentPropertyPreview.prototype['building_preview'] = undefined;






export default RentPropertyPreview;

