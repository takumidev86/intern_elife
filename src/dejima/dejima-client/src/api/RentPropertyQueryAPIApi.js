/**
 * ES 物件API
 * （株）いい生活 が提供予定の 物件情報API のインターフェイス仕様書  いい物件Oneに登録した賃貸物件情報を参照する物件参照API仕様について定める。  ※1: 開発中のため、実際のリリース時の仕様は異なる場合がございます。  ※2: 売買物件に関する仕様に関してはα版であり、今後大きな仕様の見直しを行う可能性がございます。  ## リソース仕様  ### 通信仕様  HTTP/2 および HTTP/1.1 をサポートする。通信はTLSで暗号化されたHTTPSのみを許可する。  ### リクエストヘッダ  リクエストヘッダには以下の指定を必須とする。  | No. | リクエストヘッダのフィールド名 | 指定値 | |:---:|:-------------------------------|:-------| | 1 | Accept | application/json | | 2 | X-Api-Key | 弊社が指定するキー。ご利用のお客様を特定するためのもの。 |  Acceptヘッダには、常にapplication/json を指定する。 これにより、レスポンスがJSONであることを指示する。  ### データフォーマットと文字コード  データフォーマットはJSON、文字コードはUTF-8とする。  ### データ型  通常のJSONの型以外に擬似型としていくつかのデータ型を用意している。 これは、JSON標準では表現しきれないデータや、不動産特有のデータを扱うために定義したもので使用する。 また、ここに記載の無いデータ型については、 OpenAPI Specification (Version 3.0.2) の DataTypes に準拠する。  * [DataTypes](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types)   | No. | 型 | 説明 | |:---:|:---|:-----| | 1 | string | JSON標準の文字列 | | 2 | int | JSON標準の整数 | | 3 | float | JSON標準の浮動小数点数 | | 4 | bool | JSON標準の真偽値 | | 5 | datetime | ISO8611フォーマットの日付時刻を表す文字列。YYYY-MM-DDTHH:MM:SS。 <br> 例: 2015-08-26T19:16:03 = 2015年8月26日19時16分03秒 | | 6 | date | ISO8611フォーマットの日付を表す文字列。YYYY-MM-DD。 <br> 例: 2015-08-26 = 2015年8月26日 | | 7 | datejun | 後述 |  #### datejun型  いい生活独自の日付と旬を表すフォーマット。YYYYMMJDD。  * YYYY: 西暦年 * MM: 月。01～12。ただし00とすることにより、年単位までの精度の数字を表現可能。 * J: 旬。1=上旬、2=中旬、3=下旬。 0とすることで月単位までの精度の数字を表現可能。 * DD: 日。01～31。ただし00とすることにより、旬単位までの精度の数字を表現可能。日単位の精度の場合、1～10日までは旬を1、11～20日までは旬を2、21日以降は旬を3と指定する必要がある。 * 例:     * 201900000 = 2019年     * 201901000 = 2019年1月     * 201903100 = 2019年3月上旬     * 201912300 = 2019年12月下旬     * 201906105 = 2019年6月5日     * 201908216 = 2019年8月16日  ## 検索パラメータ  ### OR 検索  パラメータタイプが `array` のキーについては、クエリパラメータで複数指定を行った場合、 指定された値のいずれかに一致する対象を検索する（ OR 検索）。  ex) `?layout_type_code=1&layout_type_code=2`  ### ソート順  `*.order` という名前のパラメータでソート順を指定可能。ascを指定したとき昇順、descを指定したとき降順となる。  ex) `?price.order=desc`  基本的にソート順は一つだけ指定する。 
 *
 * The version of the OpenAPI document: 6.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AreaAggregateResult from '../model/AreaAggregateResult';
import AreaLevel from '../model/AreaLevel';
import BuildingPropertyList from '../model/BuildingPropertyList';
import HTTPValidationError from '../model/HTTPValidationError';
import LineAggregateResult from '../model/LineAggregateResult';
import LineLevel from '../model/LineLevel';
import Order from '../model/Order';
import PropertyList from '../model/PropertyList';
import RentBaitaiCode from '../model/RentBaitaiCode';
import RentProperty from '../model/RentProperty';

/**
* RentPropertyQueryAPI service.
* @module api/RentPropertyQueryAPIApi
* @version 6.1.3
*/
export default class RentPropertyQueryAPIApi {

    /**
    * Constructs a new RentPropertyQueryAPIApi. 
    * @alias module:api/RentPropertyQueryAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Aggregate By Area
     * エリア別の物件数の集計結果を取得する（賃貸）  市区郡/町村のレベル別に物件数を集計し、その結果を返す。 クエリパラメータで検索条件を付加することもできる。
     * @param {module:model/AreaLevel} level 集計のレベル
     * @param {Object} opts Optional parameters
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AreaAggregateResult} and HTTP response
     */
    aggregateRentPropertyByAreaWithHttpInfo(level, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'level' is set
      if (level === undefined || level === null) {
        throw new Error("Missing the required parameter 'level' when calling aggregateRentPropertyByArea");
      }

      let pathParams = {
      };
      let queryParams = {
        'level': level,
        'baitai_code': opts['baitaiCode'],
        'property_full_key': this.apiClient.buildCollectionParam(opts['propertyFullKey'], 'multi'),
        'property_use_code': this.apiClient.buildCollectionParam(opts['propertyUseCode'], 'multi'),
        'property_type_code': this.apiClient.buildCollectionParam(opts['propertyTypeCode'], 'multi'),
        'new_used_code': opts['newUsedCode'],
        'residence_rent_period_code': opts['residenceRentPeriodCode'],
        'layout_text': this.apiClient.buildCollectionParam(opts['layoutText'], 'multi'),
        'layout_type_code': this.apiClient.buildCollectionParam(opts['layoutTypeCode'], 'multi'),
        'is_larger_than_5k': opts['isLargerThan5k'],
        'layout_code': this.apiClient.buildCollectionParam(opts['layoutCode'], 'multi'),
        'is_now_available': opts['isNowAvailable'],
        'available_code': this.apiClient.buildCollectionParam(opts['availableCode'], 'multi'),
        'rent_transaction_form_code': this.apiClient.buildCollectionParam(opts['rentTransactionFormCode'], 'multi'),
        'student_restriction_code': this.apiClient.buildCollectionParam(opts['studentRestrictionCode'], 'multi'),
        'gender_restriction_code': this.apiClient.buildCollectionParam(opts['genderRestrictionCode'], 'multi'),
        'kids_restriction_code': this.apiClient.buildCollectionParam(opts['kidsRestrictionCode'], 'multi'),
        'one_person_restriction_code': this.apiClient.buildCollectionParam(opts['onePersonRestrictionCode'], 'multi'),
        'two_persons_restriction_code': this.apiClient.buildCollectionParam(opts['twoPersonsRestrictionCode'], 'multi'),
        'elder_restriction_code': this.apiClient.buildCollectionParam(opts['elderRestrictionCode'], 'multi'),
        'manage_cost_free_code': this.apiClient.buildCollectionParam(opts['manageCostFreeCode'], 'multi'),
        'service_fee_free_code': this.apiClient.buildCollectionParam(opts['serviceFeeFreeCode'], 'multi'),
        'misc_expense_free_code': this.apiClient.buildCollectionParam(opts['miscExpenseFreeCode'], 'multi'),
        'other_initial_cost_free_flag': opts['otherInitialCostFreeFlag'],
        'pet_restriction_code': this.apiClient.buildCollectionParam(opts['petRestrictionCode'], 'multi'),
        'office_usage_restriction_code': this.apiClient.buildCollectionParam(opts['officeUsageRestrictionCode'], 'multi'),
        'corporate_contract_restriction_code': this.apiClient.buildCollectionParam(opts['corporateContractRestrictionCode'], 'multi'),
        'musical_instrument_restriction_code': this.apiClient.buildCollectionParam(opts['musicalInstrumentRestrictionCode'], 'multi'),
        'restaurant_usage_restriction_code': this.apiClient.buildCollectionParam(opts['restaurantUsageRestrictionCode'], 'multi'),
        'room_sharing_restriction_code': this.apiClient.buildCollectionParam(opts['roomSharingRestrictionCode'], 'multi'),
        'foreigner_restriction_code': this.apiClient.buildCollectionParam(opts['foreignerRestrictionCode'], 'multi'),
        'friends_restriction_code': this.apiClient.buildCollectionParam(opts['friendsRestrictionCode'], 'multi'),
        'foreign_student_restriction_code': this.apiClient.buildCollectionParam(opts['foreignStudentRestrictionCode'], 'multi'),
        'parking_availability_code': this.apiClient.buildCollectionParam(opts['parkingAvailabilityCode'], 'multi'),
        'gas_code': this.apiClient.buildCollectionParam(opts['gasCode'], 'multi'),
        'initial_cost_code': this.apiClient.buildCollectionParam(opts['initialCostCode'], 'multi'),
        'guarantor_requirements_code': this.apiClient.buildCollectionParam(opts['guarantorRequirementsCode'], 'multi'),
        'has_insurance': opts['hasInsurance'],
        'deposit_for_student_code': this.apiClient.buildCollectionParam(opts['depositForStudentCode'], 'multi'),
        'it_jusetsu_flag': opts['itJusetsuFlag'],
        'no_guarantor_flag': opts['noGuarantorFlag'],
        'is_tokuyuchin': opts['isTokuyuchin'],
        'free_rent_flag': opts['freeRentFlag'],
        'manager_flag': opts['managerFlag'],
        'has_motorbike_parking': opts['hasMotorbikeParking'],
        'has_bike_parking': opts['hasBikeParking'],
        'panorama_flag': opts['panoramaFlag'],
        'floor_plan_flag': opts['floorPlanFlag'],
        'has_exterior_image': opts['hasExteriorImage'],
        'b2b_custom_flag': opts['b2bCustomFlag'],
        'is_furnished': opts['isFurnished'],
        'has_appliances': opts['hasAppliances'],
        'is_net_free': opts['isNetFree'],
        'is_over_2f': opts['isOver2f'],
        'is_bath_toilet_separate': opts['isBathToiletSeparate'],
        'has_aircon': opts['hasAircon'],
        'has_auto_lock': opts['hasAutoLock'],
        'has_delivery_box': opts['hasDeliveryBox'],
        'has_elevator': opts['hasElevator'],
        'has_landry_room': opts['hasLandryRoom'],
        'is_flooring': opts['isFlooring'],
        'is_designers_apartment': opts['isDesignersApartment'],
        'is_barrier_free': opts['isBarrierFree'],
        'is_south_facing': opts['isSouthFacing'],
        'is_highest_floor': opts['isHighestFloor'],
        'is_corner_room': opts['isCornerRoom'],
        'has_system_kitchen': opts['hasSystemKitchen'],
        'has_ih_stove': opts['hasIhStove'],
        'has_gas_stove': opts['hasGasStove'],
        'has_multiple_gas_stove': opts['hasMultipleGasStove'],
        'has_reboil_bath': opts['hasReboilBath'],
        'has_washlet': opts['hasWashlet'],
        'has_bath_dryer': opts['hasBathDryer'],
        'has_floor_heating': opts['hasFloorHeating'],
        'has_closet': opts['hasCloset'],
        'has_walk_in_closet': opts['hasWalkInCloset'],
        'has_catv': opts['hasCatv'],
        'has_cs': opts['hasCs'],
        'has_bs': opts['hasBs'],
        'has_optical_fiber': opts['hasOpticalFiber'],
        'is_all_electric': opts['isAllElectric'],
        'has_veranda_balcony': opts['hasVerandaBalcony'],
        'is_maisonette': opts['isMaisonette'],
        'has_loft': opts['hasLoft'],
        'has_soundproof': opts['hasSoundproof'],
        'has_counter_kitchen': opts['hasCounterKitchen'],
        'has_garbage_collection_site': opts['hasGarbageCollectionSite'],
        'has_own_yard': opts['hasOwnYard'],
        'is_quake_resistant_structure': opts['isQuakeResistantStructure'],
        'is_quake_absorbing_structure': opts['isQuakeAbsorbingStructure'],
        'is_damping_structure': opts['isDampingStructure'],
        'has_tv_intercom': opts['hasTvIntercom'],
        'has_security_camera': opts['hasSecurityCamera'],
        'is_internet_available': opts['isInternetAvailable'],
        'has_trunk_room': opts['hasTrunkRoom'],
        'is_condominium': opts['isCondominium'],
        'is_tower_apartment': opts['isTowerApartment'],
        'is_renovated': opts['isRenovated'],
        'has_washroom': opts['hasWashroom'],
        'building_age.from': opts['buildingAgeFrom'],
        'building_age.to': opts['buildingAgeTo'],
        'price.from': opts['priceFrom'],
        'price.to': opts['priceTo'],
        'manage_cost_yen.from': opts['manageCostYenFrom'],
        'manage_cost_yen.to': opts['manageCostYenTo'],
        'deposit_yen.from': opts['depositYenFrom'],
        'deposit_yen.to': opts['depositYenTo'],
        'deposit_month.from': opts['depositMonthFrom'],
        'deposit_month.to': opts['depositMonthTo'],
        'key_money_yen.from': opts['keyMoneyYenFrom'],
        'key_money_yen.to': opts['keyMoneyYenTo'],
        'key_money_month.from': opts['keyMoneyMonthFrom'],
        'key_money_month.to': opts['keyMoneyMonthTo'],
        'repair_cost_yen.from': opts['repairCostYenFrom'],
        'repair_cost_yen.to': opts['repairCostYenTo'],
        'repair_cost_month.from': opts['repairCostMonthFrom'],
        'repair_cost_month.to': opts['repairCostMonthTo'],
        'initial_cost.from': opts['initialCostFrom'],
        'initial_cost.to': opts['initialCostTo'],
        'monthly_cost_summary.from': opts['monthlyCostSummaryFrom'],
        'monthly_cost_summary.to': opts['monthlyCostSummaryTo'],
        'advertising_fee_percent.to': opts['advertisingFeePercentTo'],
        'advertising_fee_percent.from': opts['advertisingFeePercentFrom'],
        'area.from': opts['areaFrom'],
        'area.to': opts['areaTo'],
        'exclusive_area.from': opts['exclusiveAreaFrom'],
        'exclusive_area.to': opts['exclusiveAreaTo'],
        'walk_from_station_minutes.from': opts['walkFromStationMinutesFrom'],
        'walk_from_station_minutes.to': opts['walkFromStationMinutesTo'],
        'last_update_datetime.from': opts['lastUpdateDatetimeFrom'],
        'last_update_datetime.to': opts['lastUpdateDatetimeTo'],
        'published_datetime.from': opts['publishedDatetimeFrom'],
        'published_datetime.to': opts['publishedDatetimeTo'],
        'price_update_date.from': opts['priceUpdateDateFrom'],
        'price_update_date.to': opts['priceUpdateDateTo'],
        'advertising_fee_update_date.from': opts['advertisingFeeUpdateDateFrom'],
        'advertising_fee_update_date.to': opts['advertisingFeeUpdateDateTo'],
        'original_property_code_text': opts['originalPropertyCodeText'],
        'building_guid': this.apiClient.buildCollectionParam(opts['buildingGuid'], 'multi'),
        'building_type_code': this.apiClient.buildCollectionParam(opts['buildingTypeCode'], 'multi'),
        'structure_code': this.apiClient.buildCollectionParam(opts['structureCode'], 'multi'),
        'site_area.from': opts['siteAreaFrom'],
        'site_area.to': opts['siteAreaTo'],
        'building_name': opts['buildingName'],
        'building_furigana': opts['buildingFurigana'],
        'tag_guid': this.apiClient.buildCollectionParam(opts['tagGuid'], 'multi'),
        'prefecture': opts['prefecture'],
        'prefecture_code': this.apiClient.buildCollectionParam(opts['prefectureCode'], 'multi'),
        'city': this.apiClient.buildCollectionParam(opts['city'], 'multi'),
        'city_code': this.apiClient.buildCollectionParam(opts['cityCode'], 'multi'),
        'town': this.apiClient.buildCollectionParam(opts['town'], 'multi'),
        'jis_code': this.apiClient.buildCollectionParam(opts['jisCode'], 'multi'),
        'address': this.apiClient.buildCollectionParam(opts['address'], 'multi'),
        'line_code': this.apiClient.buildCollectionParam(opts['lineCode'], 'multi'),
        'station_code': this.apiClient.buildCollectionParam(opts['stationCode'], 'multi'),
        'customer_key': this.apiClient.buildCollectionParam(opts['customerKey'], 'multi'),
        'ignore_publish_status': opts['ignorePublishStatus'],
        'name_or_code_text': opts['nameOrCodeText'],
        'ignore_name_display': opts['ignoreNameDisplay'],
        'query': opts['query']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AreaAggregateResult;
      return this.apiClient.callApi(
        '/property/rent/area/count/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Aggregate By Area
     * エリア別の物件数の集計結果を取得する（賃貸）  市区郡/町村のレベル別に物件数を集計し、その結果を返す。 クエリパラメータで検索条件を付加することもできる。
     * @param {module:model/AreaLevel} level 集計のレベル
     * @param {Object} opts Optional parameters
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AreaAggregateResult}
     */
    aggregateRentPropertyByArea(level, opts) {
      return this.aggregateRentPropertyByAreaWithHttpInfo(level, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Aggregate By Line
     * 鉄道会社・駅・沿線別の物件数の集計結果を取得する（賃貸）  鉄道会社・駅・沿線のレベルごとに物件数を集計し、その結果を返す。 クエリパラメータで検索条件を付加することもできる。
     * @param {module:model/LineLevel} level 集計のレベル
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} opts.companyCode 会社コード
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LineAggregateResult} and HTTP response
     */
    aggregateRentPropertyByLineWithHttpInfo(level, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'level' is set
      if (level === undefined || level === null) {
        throw new Error("Missing the required parameter 'level' when calling aggregateRentPropertyByLine");
      }

      let pathParams = {
      };
      let queryParams = {
        'level': level,
        'company_code': this.apiClient.buildCollectionParam(opts['companyCode'], 'multi'),
        'baitai_code': opts['baitaiCode'],
        'property_full_key': this.apiClient.buildCollectionParam(opts['propertyFullKey'], 'multi'),
        'property_use_code': this.apiClient.buildCollectionParam(opts['propertyUseCode'], 'multi'),
        'property_type_code': this.apiClient.buildCollectionParam(opts['propertyTypeCode'], 'multi'),
        'new_used_code': opts['newUsedCode'],
        'residence_rent_period_code': opts['residenceRentPeriodCode'],
        'layout_text': this.apiClient.buildCollectionParam(opts['layoutText'], 'multi'),
        'layout_type_code': this.apiClient.buildCollectionParam(opts['layoutTypeCode'], 'multi'),
        'is_larger_than_5k': opts['isLargerThan5k'],
        'layout_code': this.apiClient.buildCollectionParam(opts['layoutCode'], 'multi'),
        'is_now_available': opts['isNowAvailable'],
        'available_code': this.apiClient.buildCollectionParam(opts['availableCode'], 'multi'),
        'rent_transaction_form_code': this.apiClient.buildCollectionParam(opts['rentTransactionFormCode'], 'multi'),
        'student_restriction_code': this.apiClient.buildCollectionParam(opts['studentRestrictionCode'], 'multi'),
        'gender_restriction_code': this.apiClient.buildCollectionParam(opts['genderRestrictionCode'], 'multi'),
        'kids_restriction_code': this.apiClient.buildCollectionParam(opts['kidsRestrictionCode'], 'multi'),
        'one_person_restriction_code': this.apiClient.buildCollectionParam(opts['onePersonRestrictionCode'], 'multi'),
        'two_persons_restriction_code': this.apiClient.buildCollectionParam(opts['twoPersonsRestrictionCode'], 'multi'),
        'elder_restriction_code': this.apiClient.buildCollectionParam(opts['elderRestrictionCode'], 'multi'),
        'manage_cost_free_code': this.apiClient.buildCollectionParam(opts['manageCostFreeCode'], 'multi'),
        'service_fee_free_code': this.apiClient.buildCollectionParam(opts['serviceFeeFreeCode'], 'multi'),
        'misc_expense_free_code': this.apiClient.buildCollectionParam(opts['miscExpenseFreeCode'], 'multi'),
        'other_initial_cost_free_flag': opts['otherInitialCostFreeFlag'],
        'pet_restriction_code': this.apiClient.buildCollectionParam(opts['petRestrictionCode'], 'multi'),
        'office_usage_restriction_code': this.apiClient.buildCollectionParam(opts['officeUsageRestrictionCode'], 'multi'),
        'corporate_contract_restriction_code': this.apiClient.buildCollectionParam(opts['corporateContractRestrictionCode'], 'multi'),
        'musical_instrument_restriction_code': this.apiClient.buildCollectionParam(opts['musicalInstrumentRestrictionCode'], 'multi'),
        'restaurant_usage_restriction_code': this.apiClient.buildCollectionParam(opts['restaurantUsageRestrictionCode'], 'multi'),
        'room_sharing_restriction_code': this.apiClient.buildCollectionParam(opts['roomSharingRestrictionCode'], 'multi'),
        'foreigner_restriction_code': this.apiClient.buildCollectionParam(opts['foreignerRestrictionCode'], 'multi'),
        'friends_restriction_code': this.apiClient.buildCollectionParam(opts['friendsRestrictionCode'], 'multi'),
        'foreign_student_restriction_code': this.apiClient.buildCollectionParam(opts['foreignStudentRestrictionCode'], 'multi'),
        'parking_availability_code': this.apiClient.buildCollectionParam(opts['parkingAvailabilityCode'], 'multi'),
        'gas_code': this.apiClient.buildCollectionParam(opts['gasCode'], 'multi'),
        'initial_cost_code': this.apiClient.buildCollectionParam(opts['initialCostCode'], 'multi'),
        'guarantor_requirements_code': this.apiClient.buildCollectionParam(opts['guarantorRequirementsCode'], 'multi'),
        'has_insurance': opts['hasInsurance'],
        'deposit_for_student_code': this.apiClient.buildCollectionParam(opts['depositForStudentCode'], 'multi'),
        'it_jusetsu_flag': opts['itJusetsuFlag'],
        'no_guarantor_flag': opts['noGuarantorFlag'],
        'is_tokuyuchin': opts['isTokuyuchin'],
        'free_rent_flag': opts['freeRentFlag'],
        'manager_flag': opts['managerFlag'],
        'has_motorbike_parking': opts['hasMotorbikeParking'],
        'has_bike_parking': opts['hasBikeParking'],
        'panorama_flag': opts['panoramaFlag'],
        'floor_plan_flag': opts['floorPlanFlag'],
        'has_exterior_image': opts['hasExteriorImage'],
        'b2b_custom_flag': opts['b2bCustomFlag'],
        'is_furnished': opts['isFurnished'],
        'has_appliances': opts['hasAppliances'],
        'is_net_free': opts['isNetFree'],
        'is_over_2f': opts['isOver2f'],
        'is_bath_toilet_separate': opts['isBathToiletSeparate'],
        'has_aircon': opts['hasAircon'],
        'has_auto_lock': opts['hasAutoLock'],
        'has_delivery_box': opts['hasDeliveryBox'],
        'has_elevator': opts['hasElevator'],
        'has_landry_room': opts['hasLandryRoom'],
        'is_flooring': opts['isFlooring'],
        'is_designers_apartment': opts['isDesignersApartment'],
        'is_barrier_free': opts['isBarrierFree'],
        'is_south_facing': opts['isSouthFacing'],
        'is_highest_floor': opts['isHighestFloor'],
        'is_corner_room': opts['isCornerRoom'],
        'has_system_kitchen': opts['hasSystemKitchen'],
        'has_ih_stove': opts['hasIhStove'],
        'has_gas_stove': opts['hasGasStove'],
        'has_multiple_gas_stove': opts['hasMultipleGasStove'],
        'has_reboil_bath': opts['hasReboilBath'],
        'has_washlet': opts['hasWashlet'],
        'has_bath_dryer': opts['hasBathDryer'],
        'has_floor_heating': opts['hasFloorHeating'],
        'has_closet': opts['hasCloset'],
        'has_walk_in_closet': opts['hasWalkInCloset'],
        'has_catv': opts['hasCatv'],
        'has_cs': opts['hasCs'],
        'has_bs': opts['hasBs'],
        'has_optical_fiber': opts['hasOpticalFiber'],
        'is_all_electric': opts['isAllElectric'],
        'has_veranda_balcony': opts['hasVerandaBalcony'],
        'is_maisonette': opts['isMaisonette'],
        'has_loft': opts['hasLoft'],
        'has_soundproof': opts['hasSoundproof'],
        'has_counter_kitchen': opts['hasCounterKitchen'],
        'has_garbage_collection_site': opts['hasGarbageCollectionSite'],
        'has_own_yard': opts['hasOwnYard'],
        'is_quake_resistant_structure': opts['isQuakeResistantStructure'],
        'is_quake_absorbing_structure': opts['isQuakeAbsorbingStructure'],
        'is_damping_structure': opts['isDampingStructure'],
        'has_tv_intercom': opts['hasTvIntercom'],
        'has_security_camera': opts['hasSecurityCamera'],
        'is_internet_available': opts['isInternetAvailable'],
        'has_trunk_room': opts['hasTrunkRoom'],
        'is_condominium': opts['isCondominium'],
        'is_tower_apartment': opts['isTowerApartment'],
        'is_renovated': opts['isRenovated'],
        'has_washroom': opts['hasWashroom'],
        'building_age.from': opts['buildingAgeFrom'],
        'building_age.to': opts['buildingAgeTo'],
        'price.from': opts['priceFrom'],
        'price.to': opts['priceTo'],
        'manage_cost_yen.from': opts['manageCostYenFrom'],
        'manage_cost_yen.to': opts['manageCostYenTo'],
        'deposit_yen.from': opts['depositYenFrom'],
        'deposit_yen.to': opts['depositYenTo'],
        'deposit_month.from': opts['depositMonthFrom'],
        'deposit_month.to': opts['depositMonthTo'],
        'key_money_yen.from': opts['keyMoneyYenFrom'],
        'key_money_yen.to': opts['keyMoneyYenTo'],
        'key_money_month.from': opts['keyMoneyMonthFrom'],
        'key_money_month.to': opts['keyMoneyMonthTo'],
        'repair_cost_yen.from': opts['repairCostYenFrom'],
        'repair_cost_yen.to': opts['repairCostYenTo'],
        'repair_cost_month.from': opts['repairCostMonthFrom'],
        'repair_cost_month.to': opts['repairCostMonthTo'],
        'initial_cost.from': opts['initialCostFrom'],
        'initial_cost.to': opts['initialCostTo'],
        'monthly_cost_summary.from': opts['monthlyCostSummaryFrom'],
        'monthly_cost_summary.to': opts['monthlyCostSummaryTo'],
        'advertising_fee_percent.to': opts['advertisingFeePercentTo'],
        'advertising_fee_percent.from': opts['advertisingFeePercentFrom'],
        'area.from': opts['areaFrom'],
        'area.to': opts['areaTo'],
        'exclusive_area.from': opts['exclusiveAreaFrom'],
        'exclusive_area.to': opts['exclusiveAreaTo'],
        'walk_from_station_minutes.from': opts['walkFromStationMinutesFrom'],
        'walk_from_station_minutes.to': opts['walkFromStationMinutesTo'],
        'last_update_datetime.from': opts['lastUpdateDatetimeFrom'],
        'last_update_datetime.to': opts['lastUpdateDatetimeTo'],
        'published_datetime.from': opts['publishedDatetimeFrom'],
        'published_datetime.to': opts['publishedDatetimeTo'],
        'price_update_date.from': opts['priceUpdateDateFrom'],
        'price_update_date.to': opts['priceUpdateDateTo'],
        'advertising_fee_update_date.from': opts['advertisingFeeUpdateDateFrom'],
        'advertising_fee_update_date.to': opts['advertisingFeeUpdateDateTo'],
        'original_property_code_text': opts['originalPropertyCodeText'],
        'building_guid': this.apiClient.buildCollectionParam(opts['buildingGuid'], 'multi'),
        'building_type_code': this.apiClient.buildCollectionParam(opts['buildingTypeCode'], 'multi'),
        'structure_code': this.apiClient.buildCollectionParam(opts['structureCode'], 'multi'),
        'site_area.from': opts['siteAreaFrom'],
        'site_area.to': opts['siteAreaTo'],
        'building_name': opts['buildingName'],
        'building_furigana': opts['buildingFurigana'],
        'tag_guid': this.apiClient.buildCollectionParam(opts['tagGuid'], 'multi'),
        'prefecture': opts['prefecture'],
        'prefecture_code': this.apiClient.buildCollectionParam(opts['prefectureCode'], 'multi'),
        'city': this.apiClient.buildCollectionParam(opts['city'], 'multi'),
        'city_code': this.apiClient.buildCollectionParam(opts['cityCode'], 'multi'),
        'town': this.apiClient.buildCollectionParam(opts['town'], 'multi'),
        'jis_code': this.apiClient.buildCollectionParam(opts['jisCode'], 'multi'),
        'address': this.apiClient.buildCollectionParam(opts['address'], 'multi'),
        'line_code': this.apiClient.buildCollectionParam(opts['lineCode'], 'multi'),
        'station_code': this.apiClient.buildCollectionParam(opts['stationCode'], 'multi'),
        'customer_key': this.apiClient.buildCollectionParam(opts['customerKey'], 'multi'),
        'ignore_publish_status': opts['ignorePublishStatus'],
        'name_or_code_text': opts['nameOrCodeText'],
        'ignore_name_display': opts['ignoreNameDisplay'],
        'query': opts['query']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LineAggregateResult;
      return this.apiClient.callApi(
        '/property/rent/line/count/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Aggregate By Line
     * 鉄道会社・駅・沿線別の物件数の集計結果を取得する（賃貸）  鉄道会社・駅・沿線のレベルごとに物件数を集計し、その結果を返す。 クエリパラメータで検索条件を付加することもできる。
     * @param {module:model/LineLevel} level 集計のレベル
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} opts.companyCode 会社コード
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/LineAggregateResult}
     */
    aggregateRentPropertyByLine(level, opts) {
      return this.aggregateRentPropertyByLineWithHttpInfo(level, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Choice Rent Property Dwelling Unit
     * 区画単位での物件をランダムに返す(賃貸)  区画ごとに検索条件に合致する部屋区画から items_per_page 個だけランダムに 選んで一覧情報を返す。 レスポンス形式のイメージは以下のようになる。   ``` 区画a -- 建物A 区画b -- 建物A 区画c -- 建物A 区画d -- 建物B 区画e -- 建物B ```
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startIndex 検索の開始インデックス (default to 1)
     * @param {Number} opts.itemsPerPage ページあたりの最大表示数 (default to 10)
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @param {String} opts.order 複数のソート条件を指定したい場合の特殊パラメータ。{.orderを除いたソートパラメータ名}.{asc か desc}を , 区切りで並べて指定すると、その先頭から順にソートが適用される。例: order=property_full_key.desc,layout.asc は、property_full_keyの降順、layoutの昇順でソートされる。このパラメータを個別のソート条件と同時に指定した場合、このパラメータのソート順が先に適用され、その後に個別のソート条件が適用される。
     * @param {module:model/Order} opts.propertyFullKeyOrder 物件完全IDソート順
     * @param {module:model/Order} opts.propertyClassCodeOrder 募集種別区分コードソート順
     * @param {module:model/Order} opts.propertyUseCodeOrder 募集用途区分ソート順
     * @param {module:model/Order} opts.propertyTypeCodeOrder 募集種別区分ソート順
     * @param {module:model/Order} opts.modifiedOrder 新着ソート順。非推奨のため代わりにlast_update_datetime.orderを使うこと。
     * @param {module:model/Order} opts.lastUpdateDatetimeOrder 新着ソート順
     * @param {module:model/Order} opts.layoutOrder 間取りソート順
     * @param {module:model/Order} opts.buildingAgeOrder 築年月ソート順
     * @param {module:model/Order} opts.stationOrder 駅ソート順
     * @param {module:model/Order} opts.stationNameOrder 駅名ソート順
     * @param {module:model/Order} opts.lineOrder 沿線ソート順
     * @param {module:model/Order} opts.lineNameOrder 沿線名ソート順
     * @param {module:model/Order} opts.walkFromStationMinutesOrder 駅徒歩時間ソート順
     * @param {module:model/Order} opts.addressOrder 住所コードソート順
     * @param {module:model/Order} opts.searchAreaOrder 面積ソート順
     * @param {module:model/Order} opts.exclusiveAreaOrder 専有面積ソート順
     * @param {module:model/Order} opts.buildingNameOrder 建物名ソート順
     * @param {module:model/Order} opts.buildingFuriganaOrder 建物名フリガナソート順
     * @param {module:model/Order} opts.depositPriceOrder 敷金/保証金（円）ソート順
     * @param {module:model/Order} opts.keyMoneyPriceOrder 礼金/権利金（円）ソート順
     * @param {module:model/Order} opts.manageCostPriceOrder 管理費/共益費/雑費（円）ソート順
     * @param {module:model/Order} opts.advertisingFeePercentOrder 広告料（パーセント）ソート順
     * @param {module:model/Order} opts.advertiseFlagOrder 広告可フラグソート順
     * @param {module:model/Order} opts.floorNumberOrder 所在階ソート順
     * @param {module:model/Order} opts.availableDateOrder 入居可能日ソート順
     * @param {module:model/Order} opts.priceOrder 賃料ソート順
     * @param {module:model/Order} opts.initialCostOrder 初期費用ソート順
     * @param {module:model/Order} opts.monthlyCostSummaryOrder 管理費など込み賃料
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PropertyList} and HTTP response
     */
    choiceRentPropertyWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start_index': opts['startIndex'],
        'items_per_page': opts['itemsPerPage'],
        'baitai_code': opts['baitaiCode'],
        'property_full_key': this.apiClient.buildCollectionParam(opts['propertyFullKey'], 'multi'),
        'property_use_code': this.apiClient.buildCollectionParam(opts['propertyUseCode'], 'multi'),
        'property_type_code': this.apiClient.buildCollectionParam(opts['propertyTypeCode'], 'multi'),
        'new_used_code': opts['newUsedCode'],
        'residence_rent_period_code': opts['residenceRentPeriodCode'],
        'layout_text': this.apiClient.buildCollectionParam(opts['layoutText'], 'multi'),
        'layout_type_code': this.apiClient.buildCollectionParam(opts['layoutTypeCode'], 'multi'),
        'is_larger_than_5k': opts['isLargerThan5k'],
        'layout_code': this.apiClient.buildCollectionParam(opts['layoutCode'], 'multi'),
        'is_now_available': opts['isNowAvailable'],
        'available_code': this.apiClient.buildCollectionParam(opts['availableCode'], 'multi'),
        'rent_transaction_form_code': this.apiClient.buildCollectionParam(opts['rentTransactionFormCode'], 'multi'),
        'student_restriction_code': this.apiClient.buildCollectionParam(opts['studentRestrictionCode'], 'multi'),
        'gender_restriction_code': this.apiClient.buildCollectionParam(opts['genderRestrictionCode'], 'multi'),
        'kids_restriction_code': this.apiClient.buildCollectionParam(opts['kidsRestrictionCode'], 'multi'),
        'one_person_restriction_code': this.apiClient.buildCollectionParam(opts['onePersonRestrictionCode'], 'multi'),
        'two_persons_restriction_code': this.apiClient.buildCollectionParam(opts['twoPersonsRestrictionCode'], 'multi'),
        'elder_restriction_code': this.apiClient.buildCollectionParam(opts['elderRestrictionCode'], 'multi'),
        'manage_cost_free_code': this.apiClient.buildCollectionParam(opts['manageCostFreeCode'], 'multi'),
        'service_fee_free_code': this.apiClient.buildCollectionParam(opts['serviceFeeFreeCode'], 'multi'),
        'misc_expense_free_code': this.apiClient.buildCollectionParam(opts['miscExpenseFreeCode'], 'multi'),
        'other_initial_cost_free_flag': opts['otherInitialCostFreeFlag'],
        'pet_restriction_code': this.apiClient.buildCollectionParam(opts['petRestrictionCode'], 'multi'),
        'office_usage_restriction_code': this.apiClient.buildCollectionParam(opts['officeUsageRestrictionCode'], 'multi'),
        'corporate_contract_restriction_code': this.apiClient.buildCollectionParam(opts['corporateContractRestrictionCode'], 'multi'),
        'musical_instrument_restriction_code': this.apiClient.buildCollectionParam(opts['musicalInstrumentRestrictionCode'], 'multi'),
        'restaurant_usage_restriction_code': this.apiClient.buildCollectionParam(opts['restaurantUsageRestrictionCode'], 'multi'),
        'room_sharing_restriction_code': this.apiClient.buildCollectionParam(opts['roomSharingRestrictionCode'], 'multi'),
        'foreigner_restriction_code': this.apiClient.buildCollectionParam(opts['foreignerRestrictionCode'], 'multi'),
        'friends_restriction_code': this.apiClient.buildCollectionParam(opts['friendsRestrictionCode'], 'multi'),
        'foreign_student_restriction_code': this.apiClient.buildCollectionParam(opts['foreignStudentRestrictionCode'], 'multi'),
        'parking_availability_code': this.apiClient.buildCollectionParam(opts['parkingAvailabilityCode'], 'multi'),
        'gas_code': this.apiClient.buildCollectionParam(opts['gasCode'], 'multi'),
        'initial_cost_code': this.apiClient.buildCollectionParam(opts['initialCostCode'], 'multi'),
        'guarantor_requirements_code': this.apiClient.buildCollectionParam(opts['guarantorRequirementsCode'], 'multi'),
        'has_insurance': opts['hasInsurance'],
        'deposit_for_student_code': this.apiClient.buildCollectionParam(opts['depositForStudentCode'], 'multi'),
        'it_jusetsu_flag': opts['itJusetsuFlag'],
        'no_guarantor_flag': opts['noGuarantorFlag'],
        'is_tokuyuchin': opts['isTokuyuchin'],
        'free_rent_flag': opts['freeRentFlag'],
        'manager_flag': opts['managerFlag'],
        'has_motorbike_parking': opts['hasMotorbikeParking'],
        'has_bike_parking': opts['hasBikeParking'],
        'panorama_flag': opts['panoramaFlag'],
        'floor_plan_flag': opts['floorPlanFlag'],
        'has_exterior_image': opts['hasExteriorImage'],
        'b2b_custom_flag': opts['b2bCustomFlag'],
        'is_furnished': opts['isFurnished'],
        'has_appliances': opts['hasAppliances'],
        'is_net_free': opts['isNetFree'],
        'is_over_2f': opts['isOver2f'],
        'is_bath_toilet_separate': opts['isBathToiletSeparate'],
        'has_aircon': opts['hasAircon'],
        'has_auto_lock': opts['hasAutoLock'],
        'has_delivery_box': opts['hasDeliveryBox'],
        'has_elevator': opts['hasElevator'],
        'has_landry_room': opts['hasLandryRoom'],
        'is_flooring': opts['isFlooring'],
        'is_designers_apartment': opts['isDesignersApartment'],
        'is_barrier_free': opts['isBarrierFree'],
        'is_south_facing': opts['isSouthFacing'],
        'is_highest_floor': opts['isHighestFloor'],
        'is_corner_room': opts['isCornerRoom'],
        'has_system_kitchen': opts['hasSystemKitchen'],
        'has_ih_stove': opts['hasIhStove'],
        'has_gas_stove': opts['hasGasStove'],
        'has_multiple_gas_stove': opts['hasMultipleGasStove'],
        'has_reboil_bath': opts['hasReboilBath'],
        'has_washlet': opts['hasWashlet'],
        'has_bath_dryer': opts['hasBathDryer'],
        'has_floor_heating': opts['hasFloorHeating'],
        'has_closet': opts['hasCloset'],
        'has_walk_in_closet': opts['hasWalkInCloset'],
        'has_catv': opts['hasCatv'],
        'has_cs': opts['hasCs'],
        'has_bs': opts['hasBs'],
        'has_optical_fiber': opts['hasOpticalFiber'],
        'is_all_electric': opts['isAllElectric'],
        'has_veranda_balcony': opts['hasVerandaBalcony'],
        'is_maisonette': opts['isMaisonette'],
        'has_loft': opts['hasLoft'],
        'has_soundproof': opts['hasSoundproof'],
        'has_counter_kitchen': opts['hasCounterKitchen'],
        'has_garbage_collection_site': opts['hasGarbageCollectionSite'],
        'has_own_yard': opts['hasOwnYard'],
        'is_quake_resistant_structure': opts['isQuakeResistantStructure'],
        'is_quake_absorbing_structure': opts['isQuakeAbsorbingStructure'],
        'is_damping_structure': opts['isDampingStructure'],
        'has_tv_intercom': opts['hasTvIntercom'],
        'has_security_camera': opts['hasSecurityCamera'],
        'is_internet_available': opts['isInternetAvailable'],
        'has_trunk_room': opts['hasTrunkRoom'],
        'is_condominium': opts['isCondominium'],
        'is_tower_apartment': opts['isTowerApartment'],
        'is_renovated': opts['isRenovated'],
        'has_washroom': opts['hasWashroom'],
        'building_age.from': opts['buildingAgeFrom'],
        'building_age.to': opts['buildingAgeTo'],
        'price.from': opts['priceFrom'],
        'price.to': opts['priceTo'],
        'manage_cost_yen.from': opts['manageCostYenFrom'],
        'manage_cost_yen.to': opts['manageCostYenTo'],
        'deposit_yen.from': opts['depositYenFrom'],
        'deposit_yen.to': opts['depositYenTo'],
        'deposit_month.from': opts['depositMonthFrom'],
        'deposit_month.to': opts['depositMonthTo'],
        'key_money_yen.from': opts['keyMoneyYenFrom'],
        'key_money_yen.to': opts['keyMoneyYenTo'],
        'key_money_month.from': opts['keyMoneyMonthFrom'],
        'key_money_month.to': opts['keyMoneyMonthTo'],
        'repair_cost_yen.from': opts['repairCostYenFrom'],
        'repair_cost_yen.to': opts['repairCostYenTo'],
        'repair_cost_month.from': opts['repairCostMonthFrom'],
        'repair_cost_month.to': opts['repairCostMonthTo'],
        'initial_cost.from': opts['initialCostFrom'],
        'initial_cost.to': opts['initialCostTo'],
        'monthly_cost_summary.from': opts['monthlyCostSummaryFrom'],
        'monthly_cost_summary.to': opts['monthlyCostSummaryTo'],
        'advertising_fee_percent.to': opts['advertisingFeePercentTo'],
        'advertising_fee_percent.from': opts['advertisingFeePercentFrom'],
        'area.from': opts['areaFrom'],
        'area.to': opts['areaTo'],
        'exclusive_area.from': opts['exclusiveAreaFrom'],
        'exclusive_area.to': opts['exclusiveAreaTo'],
        'walk_from_station_minutes.from': opts['walkFromStationMinutesFrom'],
        'walk_from_station_minutes.to': opts['walkFromStationMinutesTo'],
        'last_update_datetime.from': opts['lastUpdateDatetimeFrom'],
        'last_update_datetime.to': opts['lastUpdateDatetimeTo'],
        'published_datetime.from': opts['publishedDatetimeFrom'],
        'published_datetime.to': opts['publishedDatetimeTo'],
        'price_update_date.from': opts['priceUpdateDateFrom'],
        'price_update_date.to': opts['priceUpdateDateTo'],
        'advertising_fee_update_date.from': opts['advertisingFeeUpdateDateFrom'],
        'advertising_fee_update_date.to': opts['advertisingFeeUpdateDateTo'],
        'original_property_code_text': opts['originalPropertyCodeText'],
        'building_guid': this.apiClient.buildCollectionParam(opts['buildingGuid'], 'multi'),
        'building_type_code': this.apiClient.buildCollectionParam(opts['buildingTypeCode'], 'multi'),
        'structure_code': this.apiClient.buildCollectionParam(opts['structureCode'], 'multi'),
        'site_area.from': opts['siteAreaFrom'],
        'site_area.to': opts['siteAreaTo'],
        'building_name': opts['buildingName'],
        'building_furigana': opts['buildingFurigana'],
        'tag_guid': this.apiClient.buildCollectionParam(opts['tagGuid'], 'multi'),
        'prefecture': opts['prefecture'],
        'prefecture_code': this.apiClient.buildCollectionParam(opts['prefectureCode'], 'multi'),
        'city': this.apiClient.buildCollectionParam(opts['city'], 'multi'),
        'city_code': this.apiClient.buildCollectionParam(opts['cityCode'], 'multi'),
        'town': this.apiClient.buildCollectionParam(opts['town'], 'multi'),
        'jis_code': this.apiClient.buildCollectionParam(opts['jisCode'], 'multi'),
        'address': this.apiClient.buildCollectionParam(opts['address'], 'multi'),
        'line_code': this.apiClient.buildCollectionParam(opts['lineCode'], 'multi'),
        'station_code': this.apiClient.buildCollectionParam(opts['stationCode'], 'multi'),
        'customer_key': this.apiClient.buildCollectionParam(opts['customerKey'], 'multi'),
        'ignore_publish_status': opts['ignorePublishStatus'],
        'name_or_code_text': opts['nameOrCodeText'],
        'ignore_name_display': opts['ignoreNameDisplay'],
        'query': opts['query'],
        'order': opts['order'],
        'property_full_key.order': opts['propertyFullKeyOrder'],
        'property_class_code.order': opts['propertyClassCodeOrder'],
        'property_use_code.order': opts['propertyUseCodeOrder'],
        'property_type_code.order': opts['propertyTypeCodeOrder'],
        'modified.order': opts['modifiedOrder'],
        'last_update_datetime.order': opts['lastUpdateDatetimeOrder'],
        'layout.order': opts['layoutOrder'],
        'building_age.order': opts['buildingAgeOrder'],
        'station.order': opts['stationOrder'],
        'station_name.order': opts['stationNameOrder'],
        'line.order': opts['lineOrder'],
        'line_name.order': opts['lineNameOrder'],
        'walk_from_station_minutes.order': opts['walkFromStationMinutesOrder'],
        'address.order': opts['addressOrder'],
        'search_area.order': opts['searchAreaOrder'],
        'exclusive_area.order': opts['exclusiveAreaOrder'],
        'building_name.order': opts['buildingNameOrder'],
        'building_furigana.order': opts['buildingFuriganaOrder'],
        'deposit_price.order': opts['depositPriceOrder'],
        'key_money_price.order': opts['keyMoneyPriceOrder'],
        'manage_cost_price.order': opts['manageCostPriceOrder'],
        'advertising_fee_percent.order': opts['advertisingFeePercentOrder'],
        'advertise_flag.order': opts['advertiseFlagOrder'],
        'floor_number.order': opts['floorNumberOrder'],
        'available_date.order': opts['availableDateOrder'],
        'price.order': opts['priceOrder'],
        'initial_cost.order': opts['initialCostOrder'],
        'monthly_cost_summary.order': opts['monthlyCostSummaryOrder']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PropertyList;
      return this.apiClient.callApi(
        '/property/rent/dwelling_unit/choice/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Choice Rent Property Dwelling Unit
     * 区画単位での物件をランダムに返す(賃貸)  区画ごとに検索条件に合致する部屋区画から items_per_page 個だけランダムに 選んで一覧情報を返す。 レスポンス形式のイメージは以下のようになる。   ``` 区画a -- 建物A 区画b -- 建物A 区画c -- 建物A 区画d -- 建物B 区画e -- 建物B ```
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startIndex 検索の開始インデックス (default to 1)
     * @param {Number} opts.itemsPerPage ページあたりの最大表示数 (default to 10)
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @param {String} opts.order 複数のソート条件を指定したい場合の特殊パラメータ。{.orderを除いたソートパラメータ名}.{asc か desc}を , 区切りで並べて指定すると、その先頭から順にソートが適用される。例: order=property_full_key.desc,layout.asc は、property_full_keyの降順、layoutの昇順でソートされる。このパラメータを個別のソート条件と同時に指定した場合、このパラメータのソート順が先に適用され、その後に個別のソート条件が適用される。
     * @param {module:model/Order} opts.propertyFullKeyOrder 物件完全IDソート順
     * @param {module:model/Order} opts.propertyClassCodeOrder 募集種別区分コードソート順
     * @param {module:model/Order} opts.propertyUseCodeOrder 募集用途区分ソート順
     * @param {module:model/Order} opts.propertyTypeCodeOrder 募集種別区分ソート順
     * @param {module:model/Order} opts.modifiedOrder 新着ソート順。非推奨のため代わりにlast_update_datetime.orderを使うこと。
     * @param {module:model/Order} opts.lastUpdateDatetimeOrder 新着ソート順
     * @param {module:model/Order} opts.layoutOrder 間取りソート順
     * @param {module:model/Order} opts.buildingAgeOrder 築年月ソート順
     * @param {module:model/Order} opts.stationOrder 駅ソート順
     * @param {module:model/Order} opts.stationNameOrder 駅名ソート順
     * @param {module:model/Order} opts.lineOrder 沿線ソート順
     * @param {module:model/Order} opts.lineNameOrder 沿線名ソート順
     * @param {module:model/Order} opts.walkFromStationMinutesOrder 駅徒歩時間ソート順
     * @param {module:model/Order} opts.addressOrder 住所コードソート順
     * @param {module:model/Order} opts.searchAreaOrder 面積ソート順
     * @param {module:model/Order} opts.exclusiveAreaOrder 専有面積ソート順
     * @param {module:model/Order} opts.buildingNameOrder 建物名ソート順
     * @param {module:model/Order} opts.buildingFuriganaOrder 建物名フリガナソート順
     * @param {module:model/Order} opts.depositPriceOrder 敷金/保証金（円）ソート順
     * @param {module:model/Order} opts.keyMoneyPriceOrder 礼金/権利金（円）ソート順
     * @param {module:model/Order} opts.manageCostPriceOrder 管理費/共益費/雑費（円）ソート順
     * @param {module:model/Order} opts.advertisingFeePercentOrder 広告料（パーセント）ソート順
     * @param {module:model/Order} opts.advertiseFlagOrder 広告可フラグソート順
     * @param {module:model/Order} opts.floorNumberOrder 所在階ソート順
     * @param {module:model/Order} opts.availableDateOrder 入居可能日ソート順
     * @param {module:model/Order} opts.priceOrder 賃料ソート順
     * @param {module:model/Order} opts.initialCostOrder 初期費用ソート順
     * @param {module:model/Order} opts.monthlyCostSummaryOrder 管理費など込み賃料
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PropertyList}
     */
    choiceRentProperty(opts) {
      return this.choiceRentPropertyWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Property
     * property_full_keyで物件情報を取得する（賃貸）  物件の詳細情報を返す。
     * @param {String} propertyFullKey 
     * @param {Object} opts Optional parameters
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先(デフォルトはウェブサイト)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RentProperty} and HTTP response
     */
    getRentPropertyWithHttpInfo(propertyFullKey, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'propertyFullKey' is set
      if (propertyFullKey === undefined || propertyFullKey === null) {
        throw new Error("Missing the required parameter 'propertyFullKey' when calling getRentProperty");
      }

      let pathParams = {
        'property_full_key': propertyFullKey
      };
      let queryParams = {
        'baitai_code': opts['baitaiCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RentProperty;
      return this.apiClient.callApi(
        '/property/rent/{property_full_key}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Property
     * property_full_keyで物件情報を取得する（賃貸）  物件の詳細情報を返す。
     * @param {String} propertyFullKey 
     * @param {Object} opts Optional parameters
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先(デフォルトはウェブサイト)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RentProperty}
     */
    getRentProperty(propertyFullKey, opts) {
      return this.getRentPropertyWithHttpInfo(propertyFullKey, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Search Rent Property
     * 建物とそれに紐づく物件の一覧を取得する（賃貸）  建物ごとにグルーピングした形式で、検索条件に合致する部屋区画の一覧情報を返す。 レスポンス形式のイメージは以下のようになる。  ``` 建物A -- 区画a       |- 区画b       |- 区画c 建物B -- 区画d       |- 区画e ```
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startIndex 検索の開始インデックス (default to 1)
     * @param {Number} opts.itemsPerPage ページあたりの最大表示数 (default to 10)
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @param {String} opts.order 複数のソート条件を指定したい場合の特殊パラメータ。{.orderを除いたソートパラメータ名}.{asc か desc}を , 区切りで並べて指定すると、その先頭から順にソートが適用される。例: order=property_full_key.desc,layout.asc は、property_full_keyの降順、layoutの昇順でソートされる。このパラメータを個別のソート条件と同時に指定した場合、このパラメータのソート順が先に適用され、その後に個別のソート条件が適用される。
     * @param {module:model/Order} opts.propertyFullKeyOrder 物件完全IDソート順
     * @param {module:model/Order} opts.propertyClassCodeOrder 募集種別区分コードソート順
     * @param {module:model/Order} opts.propertyUseCodeOrder 募集用途区分ソート順
     * @param {module:model/Order} opts.propertyTypeCodeOrder 募集種別区分ソート順
     * @param {module:model/Order} opts.modifiedOrder 新着ソート順。非推奨のため代わりにlast_update_datetime.orderを使うこと。
     * @param {module:model/Order} opts.lastUpdateDatetimeOrder 新着ソート順
     * @param {module:model/Order} opts.layoutOrder 間取りソート順
     * @param {module:model/Order} opts.buildingAgeOrder 築年月ソート順
     * @param {module:model/Order} opts.stationOrder 駅ソート順
     * @param {module:model/Order} opts.stationNameOrder 駅名ソート順
     * @param {module:model/Order} opts.lineOrder 沿線ソート順
     * @param {module:model/Order} opts.lineNameOrder 沿線名ソート順
     * @param {module:model/Order} opts.walkFromStationMinutesOrder 駅徒歩時間ソート順
     * @param {module:model/Order} opts.addressOrder 住所コードソート順
     * @param {module:model/Order} opts.searchAreaOrder 面積ソート順
     * @param {module:model/Order} opts.exclusiveAreaOrder 専有面積ソート順
     * @param {module:model/Order} opts.buildingNameOrder 建物名ソート順
     * @param {module:model/Order} opts.buildingFuriganaOrder 建物名フリガナソート順
     * @param {module:model/Order} opts.depositPriceOrder 敷金/保証金（円）ソート順
     * @param {module:model/Order} opts.keyMoneyPriceOrder 礼金/権利金（円）ソート順
     * @param {module:model/Order} opts.manageCostPriceOrder 管理費/共益費/雑費（円）ソート順
     * @param {module:model/Order} opts.advertisingFeePercentOrder 広告料（パーセント）ソート順
     * @param {module:model/Order} opts.advertiseFlagOrder 広告可フラグソート順
     * @param {module:model/Order} opts.floorNumberOrder 所在階ソート順
     * @param {module:model/Order} opts.availableDateOrder 入居可能日ソート順
     * @param {module:model/Order} opts.priceOrder 賃料ソート順
     * @param {module:model/Order} opts.initialCostOrder 初期費用ソート順
     * @param {module:model/Order} opts.monthlyCostSummaryOrder 管理費など込み賃料
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BuildingPropertyList} and HTTP response
     */
    searchRentPropertyByBuildingWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start_index': opts['startIndex'],
        'items_per_page': opts['itemsPerPage'],
        'baitai_code': opts['baitaiCode'],
        'property_full_key': this.apiClient.buildCollectionParam(opts['propertyFullKey'], 'multi'),
        'property_use_code': this.apiClient.buildCollectionParam(opts['propertyUseCode'], 'multi'),
        'property_type_code': this.apiClient.buildCollectionParam(opts['propertyTypeCode'], 'multi'),
        'new_used_code': opts['newUsedCode'],
        'residence_rent_period_code': opts['residenceRentPeriodCode'],
        'layout_text': this.apiClient.buildCollectionParam(opts['layoutText'], 'multi'),
        'layout_type_code': this.apiClient.buildCollectionParam(opts['layoutTypeCode'], 'multi'),
        'is_larger_than_5k': opts['isLargerThan5k'],
        'layout_code': this.apiClient.buildCollectionParam(opts['layoutCode'], 'multi'),
        'is_now_available': opts['isNowAvailable'],
        'available_code': this.apiClient.buildCollectionParam(opts['availableCode'], 'multi'),
        'rent_transaction_form_code': this.apiClient.buildCollectionParam(opts['rentTransactionFormCode'], 'multi'),
        'student_restriction_code': this.apiClient.buildCollectionParam(opts['studentRestrictionCode'], 'multi'),
        'gender_restriction_code': this.apiClient.buildCollectionParam(opts['genderRestrictionCode'], 'multi'),
        'kids_restriction_code': this.apiClient.buildCollectionParam(opts['kidsRestrictionCode'], 'multi'),
        'one_person_restriction_code': this.apiClient.buildCollectionParam(opts['onePersonRestrictionCode'], 'multi'),
        'two_persons_restriction_code': this.apiClient.buildCollectionParam(opts['twoPersonsRestrictionCode'], 'multi'),
        'elder_restriction_code': this.apiClient.buildCollectionParam(opts['elderRestrictionCode'], 'multi'),
        'manage_cost_free_code': this.apiClient.buildCollectionParam(opts['manageCostFreeCode'], 'multi'),
        'service_fee_free_code': this.apiClient.buildCollectionParam(opts['serviceFeeFreeCode'], 'multi'),
        'misc_expense_free_code': this.apiClient.buildCollectionParam(opts['miscExpenseFreeCode'], 'multi'),
        'other_initial_cost_free_flag': opts['otherInitialCostFreeFlag'],
        'pet_restriction_code': this.apiClient.buildCollectionParam(opts['petRestrictionCode'], 'multi'),
        'office_usage_restriction_code': this.apiClient.buildCollectionParam(opts['officeUsageRestrictionCode'], 'multi'),
        'corporate_contract_restriction_code': this.apiClient.buildCollectionParam(opts['corporateContractRestrictionCode'], 'multi'),
        'musical_instrument_restriction_code': this.apiClient.buildCollectionParam(opts['musicalInstrumentRestrictionCode'], 'multi'),
        'restaurant_usage_restriction_code': this.apiClient.buildCollectionParam(opts['restaurantUsageRestrictionCode'], 'multi'),
        'room_sharing_restriction_code': this.apiClient.buildCollectionParam(opts['roomSharingRestrictionCode'], 'multi'),
        'foreigner_restriction_code': this.apiClient.buildCollectionParam(opts['foreignerRestrictionCode'], 'multi'),
        'friends_restriction_code': this.apiClient.buildCollectionParam(opts['friendsRestrictionCode'], 'multi'),
        'foreign_student_restriction_code': this.apiClient.buildCollectionParam(opts['foreignStudentRestrictionCode'], 'multi'),
        'parking_availability_code': this.apiClient.buildCollectionParam(opts['parkingAvailabilityCode'], 'multi'),
        'gas_code': this.apiClient.buildCollectionParam(opts['gasCode'], 'multi'),
        'initial_cost_code': this.apiClient.buildCollectionParam(opts['initialCostCode'], 'multi'),
        'guarantor_requirements_code': this.apiClient.buildCollectionParam(opts['guarantorRequirementsCode'], 'multi'),
        'has_insurance': opts['hasInsurance'],
        'deposit_for_student_code': this.apiClient.buildCollectionParam(opts['depositForStudentCode'], 'multi'),
        'it_jusetsu_flag': opts['itJusetsuFlag'],
        'no_guarantor_flag': opts['noGuarantorFlag'],
        'is_tokuyuchin': opts['isTokuyuchin'],
        'free_rent_flag': opts['freeRentFlag'],
        'manager_flag': opts['managerFlag'],
        'has_motorbike_parking': opts['hasMotorbikeParking'],
        'has_bike_parking': opts['hasBikeParking'],
        'panorama_flag': opts['panoramaFlag'],
        'floor_plan_flag': opts['floorPlanFlag'],
        'has_exterior_image': opts['hasExteriorImage'],
        'b2b_custom_flag': opts['b2bCustomFlag'],
        'is_furnished': opts['isFurnished'],
        'has_appliances': opts['hasAppliances'],
        'is_net_free': opts['isNetFree'],
        'is_over_2f': opts['isOver2f'],
        'is_bath_toilet_separate': opts['isBathToiletSeparate'],
        'has_aircon': opts['hasAircon'],
        'has_auto_lock': opts['hasAutoLock'],
        'has_delivery_box': opts['hasDeliveryBox'],
        'has_elevator': opts['hasElevator'],
        'has_landry_room': opts['hasLandryRoom'],
        'is_flooring': opts['isFlooring'],
        'is_designers_apartment': opts['isDesignersApartment'],
        'is_barrier_free': opts['isBarrierFree'],
        'is_south_facing': opts['isSouthFacing'],
        'is_highest_floor': opts['isHighestFloor'],
        'is_corner_room': opts['isCornerRoom'],
        'has_system_kitchen': opts['hasSystemKitchen'],
        'has_ih_stove': opts['hasIhStove'],
        'has_gas_stove': opts['hasGasStove'],
        'has_multiple_gas_stove': opts['hasMultipleGasStove'],
        'has_reboil_bath': opts['hasReboilBath'],
        'has_washlet': opts['hasWashlet'],
        'has_bath_dryer': opts['hasBathDryer'],
        'has_floor_heating': opts['hasFloorHeating'],
        'has_closet': opts['hasCloset'],
        'has_walk_in_closet': opts['hasWalkInCloset'],
        'has_catv': opts['hasCatv'],
        'has_cs': opts['hasCs'],
        'has_bs': opts['hasBs'],
        'has_optical_fiber': opts['hasOpticalFiber'],
        'is_all_electric': opts['isAllElectric'],
        'has_veranda_balcony': opts['hasVerandaBalcony'],
        'is_maisonette': opts['isMaisonette'],
        'has_loft': opts['hasLoft'],
        'has_soundproof': opts['hasSoundproof'],
        'has_counter_kitchen': opts['hasCounterKitchen'],
        'has_garbage_collection_site': opts['hasGarbageCollectionSite'],
        'has_own_yard': opts['hasOwnYard'],
        'is_quake_resistant_structure': opts['isQuakeResistantStructure'],
        'is_quake_absorbing_structure': opts['isQuakeAbsorbingStructure'],
        'is_damping_structure': opts['isDampingStructure'],
        'has_tv_intercom': opts['hasTvIntercom'],
        'has_security_camera': opts['hasSecurityCamera'],
        'is_internet_available': opts['isInternetAvailable'],
        'has_trunk_room': opts['hasTrunkRoom'],
        'is_condominium': opts['isCondominium'],
        'is_tower_apartment': opts['isTowerApartment'],
        'is_renovated': opts['isRenovated'],
        'has_washroom': opts['hasWashroom'],
        'building_age.from': opts['buildingAgeFrom'],
        'building_age.to': opts['buildingAgeTo'],
        'price.from': opts['priceFrom'],
        'price.to': opts['priceTo'],
        'manage_cost_yen.from': opts['manageCostYenFrom'],
        'manage_cost_yen.to': opts['manageCostYenTo'],
        'deposit_yen.from': opts['depositYenFrom'],
        'deposit_yen.to': opts['depositYenTo'],
        'deposit_month.from': opts['depositMonthFrom'],
        'deposit_month.to': opts['depositMonthTo'],
        'key_money_yen.from': opts['keyMoneyYenFrom'],
        'key_money_yen.to': opts['keyMoneyYenTo'],
        'key_money_month.from': opts['keyMoneyMonthFrom'],
        'key_money_month.to': opts['keyMoneyMonthTo'],
        'repair_cost_yen.from': opts['repairCostYenFrom'],
        'repair_cost_yen.to': opts['repairCostYenTo'],
        'repair_cost_month.from': opts['repairCostMonthFrom'],
        'repair_cost_month.to': opts['repairCostMonthTo'],
        'initial_cost.from': opts['initialCostFrom'],
        'initial_cost.to': opts['initialCostTo'],
        'monthly_cost_summary.from': opts['monthlyCostSummaryFrom'],
        'monthly_cost_summary.to': opts['monthlyCostSummaryTo'],
        'advertising_fee_percent.to': opts['advertisingFeePercentTo'],
        'advertising_fee_percent.from': opts['advertisingFeePercentFrom'],
        'area.from': opts['areaFrom'],
        'area.to': opts['areaTo'],
        'exclusive_area.from': opts['exclusiveAreaFrom'],
        'exclusive_area.to': opts['exclusiveAreaTo'],
        'walk_from_station_minutes.from': opts['walkFromStationMinutesFrom'],
        'walk_from_station_minutes.to': opts['walkFromStationMinutesTo'],
        'last_update_datetime.from': opts['lastUpdateDatetimeFrom'],
        'last_update_datetime.to': opts['lastUpdateDatetimeTo'],
        'published_datetime.from': opts['publishedDatetimeFrom'],
        'published_datetime.to': opts['publishedDatetimeTo'],
        'price_update_date.from': opts['priceUpdateDateFrom'],
        'price_update_date.to': opts['priceUpdateDateTo'],
        'advertising_fee_update_date.from': opts['advertisingFeeUpdateDateFrom'],
        'advertising_fee_update_date.to': opts['advertisingFeeUpdateDateTo'],
        'original_property_code_text': opts['originalPropertyCodeText'],
        'building_guid': this.apiClient.buildCollectionParam(opts['buildingGuid'], 'multi'),
        'building_type_code': this.apiClient.buildCollectionParam(opts['buildingTypeCode'], 'multi'),
        'structure_code': this.apiClient.buildCollectionParam(opts['structureCode'], 'multi'),
        'site_area.from': opts['siteAreaFrom'],
        'site_area.to': opts['siteAreaTo'],
        'building_name': opts['buildingName'],
        'building_furigana': opts['buildingFurigana'],
        'tag_guid': this.apiClient.buildCollectionParam(opts['tagGuid'], 'multi'),
        'prefecture': opts['prefecture'],
        'prefecture_code': this.apiClient.buildCollectionParam(opts['prefectureCode'], 'multi'),
        'city': this.apiClient.buildCollectionParam(opts['city'], 'multi'),
        'city_code': this.apiClient.buildCollectionParam(opts['cityCode'], 'multi'),
        'town': this.apiClient.buildCollectionParam(opts['town'], 'multi'),
        'jis_code': this.apiClient.buildCollectionParam(opts['jisCode'], 'multi'),
        'address': this.apiClient.buildCollectionParam(opts['address'], 'multi'),
        'line_code': this.apiClient.buildCollectionParam(opts['lineCode'], 'multi'),
        'station_code': this.apiClient.buildCollectionParam(opts['stationCode'], 'multi'),
        'customer_key': this.apiClient.buildCollectionParam(opts['customerKey'], 'multi'),
        'ignore_publish_status': opts['ignorePublishStatus'],
        'name_or_code_text': opts['nameOrCodeText'],
        'ignore_name_display': opts['ignoreNameDisplay'],
        'query': opts['query'],
        'order': opts['order'],
        'property_full_key.order': opts['propertyFullKeyOrder'],
        'property_class_code.order': opts['propertyClassCodeOrder'],
        'property_use_code.order': opts['propertyUseCodeOrder'],
        'property_type_code.order': opts['propertyTypeCodeOrder'],
        'modified.order': opts['modifiedOrder'],
        'last_update_datetime.order': opts['lastUpdateDatetimeOrder'],
        'layout.order': opts['layoutOrder'],
        'building_age.order': opts['buildingAgeOrder'],
        'station.order': opts['stationOrder'],
        'station_name.order': opts['stationNameOrder'],
        'line.order': opts['lineOrder'],
        'line_name.order': opts['lineNameOrder'],
        'walk_from_station_minutes.order': opts['walkFromStationMinutesOrder'],
        'address.order': opts['addressOrder'],
        'search_area.order': opts['searchAreaOrder'],
        'exclusive_area.order': opts['exclusiveAreaOrder'],
        'building_name.order': opts['buildingNameOrder'],
        'building_furigana.order': opts['buildingFuriganaOrder'],
        'deposit_price.order': opts['depositPriceOrder'],
        'key_money_price.order': opts['keyMoneyPriceOrder'],
        'manage_cost_price.order': opts['manageCostPriceOrder'],
        'advertising_fee_percent.order': opts['advertisingFeePercentOrder'],
        'advertise_flag.order': opts['advertiseFlagOrder'],
        'floor_number.order': opts['floorNumberOrder'],
        'available_date.order': opts['availableDateOrder'],
        'price.order': opts['priceOrder'],
        'initial_cost.order': opts['initialCostOrder'],
        'monthly_cost_summary.order': opts['monthlyCostSummaryOrder']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BuildingPropertyList;
      return this.apiClient.callApi(
        '/property/rent/search/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Search Rent Property
     * 建物とそれに紐づく物件の一覧を取得する（賃貸）  建物ごとにグルーピングした形式で、検索条件に合致する部屋区画の一覧情報を返す。 レスポンス形式のイメージは以下のようになる。  ``` 建物A -- 区画a       |- 区画b       |- 区画c 建物B -- 区画d       |- 区画e ```
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startIndex 検索の開始インデックス (default to 1)
     * @param {Number} opts.itemsPerPage ページあたりの最大表示数 (default to 10)
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @param {String} opts.order 複数のソート条件を指定したい場合の特殊パラメータ。{.orderを除いたソートパラメータ名}.{asc か desc}を , 区切りで並べて指定すると、その先頭から順にソートが適用される。例: order=property_full_key.desc,layout.asc は、property_full_keyの降順、layoutの昇順でソートされる。このパラメータを個別のソート条件と同時に指定した場合、このパラメータのソート順が先に適用され、その後に個別のソート条件が適用される。
     * @param {module:model/Order} opts.propertyFullKeyOrder 物件完全IDソート順
     * @param {module:model/Order} opts.propertyClassCodeOrder 募集種別区分コードソート順
     * @param {module:model/Order} opts.propertyUseCodeOrder 募集用途区分ソート順
     * @param {module:model/Order} opts.propertyTypeCodeOrder 募集種別区分ソート順
     * @param {module:model/Order} opts.modifiedOrder 新着ソート順。非推奨のため代わりにlast_update_datetime.orderを使うこと。
     * @param {module:model/Order} opts.lastUpdateDatetimeOrder 新着ソート順
     * @param {module:model/Order} opts.layoutOrder 間取りソート順
     * @param {module:model/Order} opts.buildingAgeOrder 築年月ソート順
     * @param {module:model/Order} opts.stationOrder 駅ソート順
     * @param {module:model/Order} opts.stationNameOrder 駅名ソート順
     * @param {module:model/Order} opts.lineOrder 沿線ソート順
     * @param {module:model/Order} opts.lineNameOrder 沿線名ソート順
     * @param {module:model/Order} opts.walkFromStationMinutesOrder 駅徒歩時間ソート順
     * @param {module:model/Order} opts.addressOrder 住所コードソート順
     * @param {module:model/Order} opts.searchAreaOrder 面積ソート順
     * @param {module:model/Order} opts.exclusiveAreaOrder 専有面積ソート順
     * @param {module:model/Order} opts.buildingNameOrder 建物名ソート順
     * @param {module:model/Order} opts.buildingFuriganaOrder 建物名フリガナソート順
     * @param {module:model/Order} opts.depositPriceOrder 敷金/保証金（円）ソート順
     * @param {module:model/Order} opts.keyMoneyPriceOrder 礼金/権利金（円）ソート順
     * @param {module:model/Order} opts.manageCostPriceOrder 管理費/共益費/雑費（円）ソート順
     * @param {module:model/Order} opts.advertisingFeePercentOrder 広告料（パーセント）ソート順
     * @param {module:model/Order} opts.advertiseFlagOrder 広告可フラグソート順
     * @param {module:model/Order} opts.floorNumberOrder 所在階ソート順
     * @param {module:model/Order} opts.availableDateOrder 入居可能日ソート順
     * @param {module:model/Order} opts.priceOrder 賃料ソート順
     * @param {module:model/Order} opts.initialCostOrder 初期費用ソート順
     * @param {module:model/Order} opts.monthlyCostSummaryOrder 管理費など込み賃料
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BuildingPropertyList}
     */
    searchRentPropertyByBuilding(opts) {
      return this.searchRentPropertyByBuildingWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Search Rent Property Dwelling Unit
     * 区画単位での物件一覧を取得する(賃貸)  区画ごとに検索条件に合致する部屋区画の一覧情報を返す。 レスポンス形式のイメージは以下のようになる。   ``` 区画a -- 建物A 区画b -- 建物A 区画c -- 建物A 区画d -- 建物B 区画e -- 建物B ```
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startIndex 検索の開始インデックス (default to 1)
     * @param {Number} opts.itemsPerPage ページあたりの最大表示数 (default to 10)
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @param {String} opts.order 複数のソート条件を指定したい場合の特殊パラメータ。{.orderを除いたソートパラメータ名}.{asc か desc}を , 区切りで並べて指定すると、その先頭から順にソートが適用される。例: order=property_full_key.desc,layout.asc は、property_full_keyの降順、layoutの昇順でソートされる。このパラメータを個別のソート条件と同時に指定した場合、このパラメータのソート順が先に適用され、その後に個別のソート条件が適用される。
     * @param {module:model/Order} opts.propertyFullKeyOrder 物件完全IDソート順
     * @param {module:model/Order} opts.propertyClassCodeOrder 募集種別区分コードソート順
     * @param {module:model/Order} opts.propertyUseCodeOrder 募集用途区分ソート順
     * @param {module:model/Order} opts.propertyTypeCodeOrder 募集種別区分ソート順
     * @param {module:model/Order} opts.modifiedOrder 新着ソート順。非推奨のため代わりにlast_update_datetime.orderを使うこと。
     * @param {module:model/Order} opts.lastUpdateDatetimeOrder 新着ソート順
     * @param {module:model/Order} opts.layoutOrder 間取りソート順
     * @param {module:model/Order} opts.buildingAgeOrder 築年月ソート順
     * @param {module:model/Order} opts.stationOrder 駅ソート順
     * @param {module:model/Order} opts.stationNameOrder 駅名ソート順
     * @param {module:model/Order} opts.lineOrder 沿線ソート順
     * @param {module:model/Order} opts.lineNameOrder 沿線名ソート順
     * @param {module:model/Order} opts.walkFromStationMinutesOrder 駅徒歩時間ソート順
     * @param {module:model/Order} opts.addressOrder 住所コードソート順
     * @param {module:model/Order} opts.searchAreaOrder 面積ソート順
     * @param {module:model/Order} opts.exclusiveAreaOrder 専有面積ソート順
     * @param {module:model/Order} opts.buildingNameOrder 建物名ソート順
     * @param {module:model/Order} opts.buildingFuriganaOrder 建物名フリガナソート順
     * @param {module:model/Order} opts.depositPriceOrder 敷金/保証金（円）ソート順
     * @param {module:model/Order} opts.keyMoneyPriceOrder 礼金/権利金（円）ソート順
     * @param {module:model/Order} opts.manageCostPriceOrder 管理費/共益費/雑費（円）ソート順
     * @param {module:model/Order} opts.advertisingFeePercentOrder 広告料（パーセント）ソート順
     * @param {module:model/Order} opts.advertiseFlagOrder 広告可フラグソート順
     * @param {module:model/Order} opts.floorNumberOrder 所在階ソート順
     * @param {module:model/Order} opts.availableDateOrder 入居可能日ソート順
     * @param {module:model/Order} opts.priceOrder 賃料ソート順
     * @param {module:model/Order} opts.initialCostOrder 初期費用ソート順
     * @param {module:model/Order} opts.monthlyCostSummaryOrder 管理費など込み賃料
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PropertyList} and HTTP response
     */
    searchRentPropertyByDwellingUnitWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start_index': opts['startIndex'],
        'items_per_page': opts['itemsPerPage'],
        'baitai_code': opts['baitaiCode'],
        'property_full_key': this.apiClient.buildCollectionParam(opts['propertyFullKey'], 'multi'),
        'property_use_code': this.apiClient.buildCollectionParam(opts['propertyUseCode'], 'multi'),
        'property_type_code': this.apiClient.buildCollectionParam(opts['propertyTypeCode'], 'multi'),
        'new_used_code': opts['newUsedCode'],
        'residence_rent_period_code': opts['residenceRentPeriodCode'],
        'layout_text': this.apiClient.buildCollectionParam(opts['layoutText'], 'multi'),
        'layout_type_code': this.apiClient.buildCollectionParam(opts['layoutTypeCode'], 'multi'),
        'is_larger_than_5k': opts['isLargerThan5k'],
        'layout_code': this.apiClient.buildCollectionParam(opts['layoutCode'], 'multi'),
        'is_now_available': opts['isNowAvailable'],
        'available_code': this.apiClient.buildCollectionParam(opts['availableCode'], 'multi'),
        'rent_transaction_form_code': this.apiClient.buildCollectionParam(opts['rentTransactionFormCode'], 'multi'),
        'student_restriction_code': this.apiClient.buildCollectionParam(opts['studentRestrictionCode'], 'multi'),
        'gender_restriction_code': this.apiClient.buildCollectionParam(opts['genderRestrictionCode'], 'multi'),
        'kids_restriction_code': this.apiClient.buildCollectionParam(opts['kidsRestrictionCode'], 'multi'),
        'one_person_restriction_code': this.apiClient.buildCollectionParam(opts['onePersonRestrictionCode'], 'multi'),
        'two_persons_restriction_code': this.apiClient.buildCollectionParam(opts['twoPersonsRestrictionCode'], 'multi'),
        'elder_restriction_code': this.apiClient.buildCollectionParam(opts['elderRestrictionCode'], 'multi'),
        'manage_cost_free_code': this.apiClient.buildCollectionParam(opts['manageCostFreeCode'], 'multi'),
        'service_fee_free_code': this.apiClient.buildCollectionParam(opts['serviceFeeFreeCode'], 'multi'),
        'misc_expense_free_code': this.apiClient.buildCollectionParam(opts['miscExpenseFreeCode'], 'multi'),
        'other_initial_cost_free_flag': opts['otherInitialCostFreeFlag'],
        'pet_restriction_code': this.apiClient.buildCollectionParam(opts['petRestrictionCode'], 'multi'),
        'office_usage_restriction_code': this.apiClient.buildCollectionParam(opts['officeUsageRestrictionCode'], 'multi'),
        'corporate_contract_restriction_code': this.apiClient.buildCollectionParam(opts['corporateContractRestrictionCode'], 'multi'),
        'musical_instrument_restriction_code': this.apiClient.buildCollectionParam(opts['musicalInstrumentRestrictionCode'], 'multi'),
        'restaurant_usage_restriction_code': this.apiClient.buildCollectionParam(opts['restaurantUsageRestrictionCode'], 'multi'),
        'room_sharing_restriction_code': this.apiClient.buildCollectionParam(opts['roomSharingRestrictionCode'], 'multi'),
        'foreigner_restriction_code': this.apiClient.buildCollectionParam(opts['foreignerRestrictionCode'], 'multi'),
        'friends_restriction_code': this.apiClient.buildCollectionParam(opts['friendsRestrictionCode'], 'multi'),
        'foreign_student_restriction_code': this.apiClient.buildCollectionParam(opts['foreignStudentRestrictionCode'], 'multi'),
        'parking_availability_code': this.apiClient.buildCollectionParam(opts['parkingAvailabilityCode'], 'multi'),
        'gas_code': this.apiClient.buildCollectionParam(opts['gasCode'], 'multi'),
        'initial_cost_code': this.apiClient.buildCollectionParam(opts['initialCostCode'], 'multi'),
        'guarantor_requirements_code': this.apiClient.buildCollectionParam(opts['guarantorRequirementsCode'], 'multi'),
        'has_insurance': opts['hasInsurance'],
        'deposit_for_student_code': this.apiClient.buildCollectionParam(opts['depositForStudentCode'], 'multi'),
        'it_jusetsu_flag': opts['itJusetsuFlag'],
        'no_guarantor_flag': opts['noGuarantorFlag'],
        'is_tokuyuchin': opts['isTokuyuchin'],
        'free_rent_flag': opts['freeRentFlag'],
        'manager_flag': opts['managerFlag'],
        'has_motorbike_parking': opts['hasMotorbikeParking'],
        'has_bike_parking': opts['hasBikeParking'],
        'panorama_flag': opts['panoramaFlag'],
        'floor_plan_flag': opts['floorPlanFlag'],
        'has_exterior_image': opts['hasExteriorImage'],
        'b2b_custom_flag': opts['b2bCustomFlag'],
        'is_furnished': opts['isFurnished'],
        'has_appliances': opts['hasAppliances'],
        'is_net_free': opts['isNetFree'],
        'is_over_2f': opts['isOver2f'],
        'is_bath_toilet_separate': opts['isBathToiletSeparate'],
        'has_aircon': opts['hasAircon'],
        'has_auto_lock': opts['hasAutoLock'],
        'has_delivery_box': opts['hasDeliveryBox'],
        'has_elevator': opts['hasElevator'],
        'has_landry_room': opts['hasLandryRoom'],
        'is_flooring': opts['isFlooring'],
        'is_designers_apartment': opts['isDesignersApartment'],
        'is_barrier_free': opts['isBarrierFree'],
        'is_south_facing': opts['isSouthFacing'],
        'is_highest_floor': opts['isHighestFloor'],
        'is_corner_room': opts['isCornerRoom'],
        'has_system_kitchen': opts['hasSystemKitchen'],
        'has_ih_stove': opts['hasIhStove'],
        'has_gas_stove': opts['hasGasStove'],
        'has_multiple_gas_stove': opts['hasMultipleGasStove'],
        'has_reboil_bath': opts['hasReboilBath'],
        'has_washlet': opts['hasWashlet'],
        'has_bath_dryer': opts['hasBathDryer'],
        'has_floor_heating': opts['hasFloorHeating'],
        'has_closet': opts['hasCloset'],
        'has_walk_in_closet': opts['hasWalkInCloset'],
        'has_catv': opts['hasCatv'],
        'has_cs': opts['hasCs'],
        'has_bs': opts['hasBs'],
        'has_optical_fiber': opts['hasOpticalFiber'],
        'is_all_electric': opts['isAllElectric'],
        'has_veranda_balcony': opts['hasVerandaBalcony'],
        'is_maisonette': opts['isMaisonette'],
        'has_loft': opts['hasLoft'],
        'has_soundproof': opts['hasSoundproof'],
        'has_counter_kitchen': opts['hasCounterKitchen'],
        'has_garbage_collection_site': opts['hasGarbageCollectionSite'],
        'has_own_yard': opts['hasOwnYard'],
        'is_quake_resistant_structure': opts['isQuakeResistantStructure'],
        'is_quake_absorbing_structure': opts['isQuakeAbsorbingStructure'],
        'is_damping_structure': opts['isDampingStructure'],
        'has_tv_intercom': opts['hasTvIntercom'],
        'has_security_camera': opts['hasSecurityCamera'],
        'is_internet_available': opts['isInternetAvailable'],
        'has_trunk_room': opts['hasTrunkRoom'],
        'is_condominium': opts['isCondominium'],
        'is_tower_apartment': opts['isTowerApartment'],
        'is_renovated': opts['isRenovated'],
        'has_washroom': opts['hasWashroom'],
        'building_age.from': opts['buildingAgeFrom'],
        'building_age.to': opts['buildingAgeTo'],
        'price.from': opts['priceFrom'],
        'price.to': opts['priceTo'],
        'manage_cost_yen.from': opts['manageCostYenFrom'],
        'manage_cost_yen.to': opts['manageCostYenTo'],
        'deposit_yen.from': opts['depositYenFrom'],
        'deposit_yen.to': opts['depositYenTo'],
        'deposit_month.from': opts['depositMonthFrom'],
        'deposit_month.to': opts['depositMonthTo'],
        'key_money_yen.from': opts['keyMoneyYenFrom'],
        'key_money_yen.to': opts['keyMoneyYenTo'],
        'key_money_month.from': opts['keyMoneyMonthFrom'],
        'key_money_month.to': opts['keyMoneyMonthTo'],
        'repair_cost_yen.from': opts['repairCostYenFrom'],
        'repair_cost_yen.to': opts['repairCostYenTo'],
        'repair_cost_month.from': opts['repairCostMonthFrom'],
        'repair_cost_month.to': opts['repairCostMonthTo'],
        'initial_cost.from': opts['initialCostFrom'],
        'initial_cost.to': opts['initialCostTo'],
        'monthly_cost_summary.from': opts['monthlyCostSummaryFrom'],
        'monthly_cost_summary.to': opts['monthlyCostSummaryTo'],
        'advertising_fee_percent.to': opts['advertisingFeePercentTo'],
        'advertising_fee_percent.from': opts['advertisingFeePercentFrom'],
        'area.from': opts['areaFrom'],
        'area.to': opts['areaTo'],
        'exclusive_area.from': opts['exclusiveAreaFrom'],
        'exclusive_area.to': opts['exclusiveAreaTo'],
        'walk_from_station_minutes.from': opts['walkFromStationMinutesFrom'],
        'walk_from_station_minutes.to': opts['walkFromStationMinutesTo'],
        'last_update_datetime.from': opts['lastUpdateDatetimeFrom'],
        'last_update_datetime.to': opts['lastUpdateDatetimeTo'],
        'published_datetime.from': opts['publishedDatetimeFrom'],
        'published_datetime.to': opts['publishedDatetimeTo'],
        'price_update_date.from': opts['priceUpdateDateFrom'],
        'price_update_date.to': opts['priceUpdateDateTo'],
        'advertising_fee_update_date.from': opts['advertisingFeeUpdateDateFrom'],
        'advertising_fee_update_date.to': opts['advertisingFeeUpdateDateTo'],
        'original_property_code_text': opts['originalPropertyCodeText'],
        'building_guid': this.apiClient.buildCollectionParam(opts['buildingGuid'], 'multi'),
        'building_type_code': this.apiClient.buildCollectionParam(opts['buildingTypeCode'], 'multi'),
        'structure_code': this.apiClient.buildCollectionParam(opts['structureCode'], 'multi'),
        'site_area.from': opts['siteAreaFrom'],
        'site_area.to': opts['siteAreaTo'],
        'building_name': opts['buildingName'],
        'building_furigana': opts['buildingFurigana'],
        'tag_guid': this.apiClient.buildCollectionParam(opts['tagGuid'], 'multi'),
        'prefecture': opts['prefecture'],
        'prefecture_code': this.apiClient.buildCollectionParam(opts['prefectureCode'], 'multi'),
        'city': this.apiClient.buildCollectionParam(opts['city'], 'multi'),
        'city_code': this.apiClient.buildCollectionParam(opts['cityCode'], 'multi'),
        'town': this.apiClient.buildCollectionParam(opts['town'], 'multi'),
        'jis_code': this.apiClient.buildCollectionParam(opts['jisCode'], 'multi'),
        'address': this.apiClient.buildCollectionParam(opts['address'], 'multi'),
        'line_code': this.apiClient.buildCollectionParam(opts['lineCode'], 'multi'),
        'station_code': this.apiClient.buildCollectionParam(opts['stationCode'], 'multi'),
        'customer_key': this.apiClient.buildCollectionParam(opts['customerKey'], 'multi'),
        'ignore_publish_status': opts['ignorePublishStatus'],
        'name_or_code_text': opts['nameOrCodeText'],
        'ignore_name_display': opts['ignoreNameDisplay'],
        'query': opts['query'],
        'order': opts['order'],
        'property_full_key.order': opts['propertyFullKeyOrder'],
        'property_class_code.order': opts['propertyClassCodeOrder'],
        'property_use_code.order': opts['propertyUseCodeOrder'],
        'property_type_code.order': opts['propertyTypeCodeOrder'],
        'modified.order': opts['modifiedOrder'],
        'last_update_datetime.order': opts['lastUpdateDatetimeOrder'],
        'layout.order': opts['layoutOrder'],
        'building_age.order': opts['buildingAgeOrder'],
        'station.order': opts['stationOrder'],
        'station_name.order': opts['stationNameOrder'],
        'line.order': opts['lineOrder'],
        'line_name.order': opts['lineNameOrder'],
        'walk_from_station_minutes.order': opts['walkFromStationMinutesOrder'],
        'address.order': opts['addressOrder'],
        'search_area.order': opts['searchAreaOrder'],
        'exclusive_area.order': opts['exclusiveAreaOrder'],
        'building_name.order': opts['buildingNameOrder'],
        'building_furigana.order': opts['buildingFuriganaOrder'],
        'deposit_price.order': opts['depositPriceOrder'],
        'key_money_price.order': opts['keyMoneyPriceOrder'],
        'manage_cost_price.order': opts['manageCostPriceOrder'],
        'advertising_fee_percent.order': opts['advertisingFeePercentOrder'],
        'advertise_flag.order': opts['advertiseFlagOrder'],
        'floor_number.order': opts['floorNumberOrder'],
        'available_date.order': opts['availableDateOrder'],
        'price.order': opts['priceOrder'],
        'initial_cost.order': opts['initialCostOrder'],
        'monthly_cost_summary.order': opts['monthlyCostSummaryOrder']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PropertyList;
      return this.apiClient.callApi(
        '/property/rent/dwelling_unit/search/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Search Rent Property Dwelling Unit
     * 区画単位での物件一覧を取得する(賃貸)  区画ごとに検索条件に合致する部屋区画の一覧情報を返す。 レスポンス形式のイメージは以下のようになる。   ``` 区画a -- 建物A 区画b -- 建物A 区画c -- 建物A 区画d -- 建物B 区画e -- 建物B ```
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startIndex 検索の開始インデックス (default to 1)
     * @param {Number} opts.itemsPerPage ページあたりの最大表示数 (default to 10)
     * @param {module:model/RentBaitaiCode} opts.baitaiCode 掲載先<br/>103: EsB2B<br/>105: ウェブサイト
     * @param {Array.<String>} opts.propertyFullKey 物件完全ID
     * @param {Array.<Number>} opts.propertyUseCode 募集用途区分<br/>1: 居住用<br/>2: 事業用<br/>3: 投資用
     * @param {Array.<Number>} opts.propertyTypeCode 募集種別区分<br/>101: マンション<br/>102: リゾートマンション<br/>103: アパート<br/>104: コーポ<br/>105: テラスハウス<br/>106: タウンハウス<br/>107: 戸建<br/>108: 土地<br/>109: 借地権譲渡<br/>110: 底地権譲渡<br/>111: 店舗<br/>112: 店舗事務所<br/>113: 住宅付店舗<br/>114: 事務所<br/>115: ビル<br/>116: 倉庫<br/>117: 工場<br/>118: トランクルーム<br/>119: 駐車場<br/>120: バイク置き場<br/>121: その他<br/>122: 間借り
     * @param {Number} opts.newUsedCode 新築・中古区分<br/>1: 新築<br/>2: 中古
     * @param {Number} opts.residenceRentPeriodCode 居住用契約区分<br/>1: 普通借家契約<br/>2: 定期借家契約
     * @param {Array.<String>} opts.layoutText 間取りテキスト
     * @param {Array.<Number>} opts.layoutTypeCode 間取りタイプ<br/>1: R<br/>2: K<br/>3: DK<br/>4: SDK<br/>5: LDK<br/>6: SLDK<br/>7: LK<br/>8: SK<br/>9: SLK
     * @param {Boolean} opts.isLargerThan5k 間取り5K以上。非推奨のため代わりにlayout_codeを使うこと。
     * @param {Array.<Number>} opts.layoutCode 間取り区分<br/>1: 1R<br/>2: 1K<br/>3: 1DK<br/>4: 1LDK<br/>5: 2K<br/>6: 2DK<br/>7: 2LDK<br/>8: 3K<br/>9: 3DK<br/>10: 3LDK<br/>11: 4K<br/>12: 4DK<br/>13: 4LDK<br/>14: 5K以上
     * @param {Boolean} opts.isNowAvailable 即入居可フラグ (入居可能区分が即時 or 入居可能日が過去日)
     * @param {Array.<Number>} opts.availableCode 入居可能区分<br/>1: 即時<br/>2: 相談<br/>3: 期日指定<br/>4: 予定
     * @param {Array.<Number>} opts.rentTransactionFormCode 賃貸取引態様区分<br/>1: 貸主<br/>2: 代理<br/>3: 仲介元付(専任)<br/>4: 仲介元付(一般)<br/>5: 仲介先物<br/>6: 仲介元付<br/>7: 仲介
     * @param {Array.<Number>} opts.studentRestrictionCode 学生専用区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.genderRestrictionCode 性別入居条件区分<br/>1: 不問<br/>2: 女性限定<br/>3: 男性限定<br/>4: 女性希望<br/>5: 男性希望
     * @param {Array.<Number>} opts.kidsRestrictionCode 子供可入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.onePersonRestrictionCode 単身可入居条件<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.twoPersonsRestrictionCode 二人入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.elderRestrictionCode 高齢者入居条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望<br/>6: 歓迎
     * @param {Array.<Number>} opts.manageCostFreeCode 管理費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.serviceFeeFreeCode 共益費無し区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Array.<Number>} opts.miscExpenseFreeCode 雑費なし区分<br/>0: 未入力<br/>1: 有<br/>2: 無<br/>3: 実費
     * @param {Boolean} opts.otherInitialCostFreeFlag その他初期費用無しフラグ
     * @param {Array.<Number>} opts.petRestrictionCode ペット可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.officeUsageRestrictionCode 事務所利用条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.corporateContractRestrictionCode 法人可条件区分<br/>1: 不可<br/>2: 可<br/>3: 相談<br/>4: 限定<br/>5: 希望
     * @param {Array.<Number>} opts.musicalInstrumentRestrictionCode 楽器等の使用区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.restaurantUsageRestrictionCode 飲食店可区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.roomSharingRestrictionCode ルームシェア区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignerRestrictionCode 外国人入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.friendsRestrictionCode 友人同士入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.foreignStudentRestrictionCode 留学生入居区分<br/>1: 不可<br/>2: 可<br/>3: 相談
     * @param {Array.<Number>} opts.parkingAvailabilityCode 駐車場の状況区分<br/>1: 無<br/>2: 有(敷地内)<br/>3: 付<br/>4: 近隣駐車場<br/>5: 空無<br/>6: 要問合せ
     * @param {Array.<Number>} opts.gasCode ガス区分<br/>1: 都市ガス<br/>2: プロパン<br/>3: 共同<br/>4: その他
     * @param {Array.<Number>} opts.initialCostCode 初期費用区分<br/>1: 五万円以下<br/>2: 十万円以下<br/>3: 十五万円以下<br/>4: 二十万円以下<br/>5: 三十万円以下<br/>99: その他
     * @param {Array.<Number>} opts.guarantorRequirementsCode 保証人要否区分<br/>1: 要<br/>2: 不要<br/>3: 未入力
     * @param {Boolean} opts.hasInsurance 損保 有無フラグ
     * @param {Array.<Number>} opts.depositForStudentCode 学生敷金区分<br/>1: 不要<br/>2: 一ヶ月<br/>3: 二ヶ月
     * @param {Boolean} opts.itJusetsuFlag IT重説可フラグ
     * @param {Boolean} opts.noGuarantorFlag 保証人の有無フラグ。非推奨のため代わりにguarantor_requirements_codeを使うこと。
     * @param {Boolean} opts.isTokuyuchin 特優賃フラグ
     * @param {Boolean} opts.freeRentFlag フリーレントフラグ
     * @param {Boolean} opts.managerFlag 管理人有り
     * @param {Boolean} opts.hasMotorbikeParking バイク置場有フラグ
     * @param {Boolean} opts.hasBikeParking 駐輪場有フラグ
     * @param {Boolean} opts.panoramaFlag パノラマ画像付きフラグ
     * @param {Boolean} opts.floorPlanFlag 間取り図付きフラグ
     * @param {Boolean} opts.hasExteriorImage 外観画像付きフラグ
     * @param {Boolean} opts.b2bCustomFlag 業者間用カスタムフラグ（ES-B2B賃貸クローズアップ物件掲載フラグ）
     * @param {Boolean} opts.isFurnished 家具付きフラグ
     * @param {Boolean} opts.hasAppliances 家電付きフラグ
     * @param {Boolean} opts.isNetFree インターネット無料フラグ
     * @param {Boolean} opts.isOver2f 2階以上フラグ
     * @param {Boolean} opts.isBathToiletSeparate 風呂トイレ別フラグ
     * @param {Boolean} opts.hasAircon エアコン付きフラグ
     * @param {Boolean} opts.hasAutoLock オートロック付きフラグ
     * @param {Boolean} opts.hasDeliveryBox 宅配ボックス付きフラグ
     * @param {Boolean} opts.hasElevator エレベーター付きフラグ
     * @param {Boolean} opts.hasLandryRoom 室内洗濯機置き場フラグ
     * @param {Boolean} opts.isFlooring フローリングフラグ
     * @param {Boolean} opts.isDesignersApartment デザイナーズマンションフラグ
     * @param {Boolean} opts.isBarrierFree バリアフリーフラグ
     * @param {Boolean} opts.isSouthFacing 南向きフラグ
     * @param {Boolean} opts.isHighestFloor 最上階フラグ
     * @param {Boolean} opts.isCornerRoom 角部屋フラグ
     * @param {Boolean} opts.hasSystemKitchen システムキッチンフラグ
     * @param {Boolean} opts.hasIhStove IHコンロフラグ
     * @param {Boolean} opts.hasGasStove ガスコンロフラグ
     * @param {Boolean} opts.hasMultipleGasStove ガスコンロ２口以上フラグ
     * @param {Boolean} opts.hasReboilBath 追い焚き機能付きフラグ
     * @param {Boolean} opts.hasWashlet 温水洗浄便座フラグ
     * @param {Boolean} opts.hasBathDryer 浴室乾燥機付きフラグ
     * @param {Boolean} opts.hasFloorHeating 床暖房フラグ
     * @param {Boolean} opts.hasCloset クローゼットフラグ
     * @param {Boolean} opts.hasWalkInCloset ウォークインクローゼットフラグ
     * @param {Boolean} opts.hasCatv CATVフラグ
     * @param {Boolean} opts.hasCs CSアンテナフラグ
     * @param {Boolean} opts.hasBs BSアンテナフラグ
     * @param {Boolean} opts.hasOpticalFiber 光ファイバーフラグ
     * @param {Boolean} opts.isAllElectric オール電化フラグ
     * @param {Boolean} opts.hasVerandaBalcony ベランダ・バルコニー付きフラグ
     * @param {Boolean} opts.isMaisonette メゾネット
     * @param {Boolean} opts.hasLoft ロフト付き
     * @param {Boolean} opts.hasSoundproof 防音設備付き
     * @param {Boolean} opts.hasCounterKitchen カウンターキッチン付き
     * @param {Boolean} opts.hasGarbageCollectionSite 敷地内ゴミ置場有り
     * @param {Boolean} opts.hasOwnYard 専用庭付き
     * @param {Boolean} opts.isQuakeResistantStructure 耐震構造
     * @param {Boolean} opts.isQuakeAbsorbingStructure 免震構造
     * @param {Boolean} opts.isDampingStructure 制震構造
     * @param {Boolean} opts.hasTvIntercom TVインターホン付き
     * @param {Boolean} opts.hasSecurityCamera 防犯カメラ付き
     * @param {Boolean} opts.isInternetAvailable インターネット使用可
     * @param {Boolean} opts.hasTrunkRoom トランクルーム付き
     * @param {Boolean} opts.isCondominium 分譲賃貸
     * @param {Boolean} opts.isTowerApartment タワーマンション
     * @param {Boolean} opts.isRenovated リノベーション
     * @param {Boolean} opts.hasWashroom 洗面所独立
     * @param {Number} opts.buildingAgeFrom 建築年数検索区間
     * @param {Number} opts.buildingAgeTo 建築年数検索区間
     * @param {Number} opts.priceFrom 現賃貸料検索区間
     * @param {Number} opts.priceTo 現賃貸料検索区間
     * @param {Number} opts.manageCostYenFrom 管理費（円）検索区間
     * @param {Number} opts.manageCostYenTo 管理費（円）検索区間
     * @param {Number} opts.depositYenFrom 敷金/保証金（円）検索区間
     * @param {Number} opts.depositYenTo 敷金/保証金（円）検索区間
     * @param {Number} opts.depositMonthFrom 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.depositMonthTo 敷金/保証金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyYenFrom 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyYenTo 礼金/権利金（円）検索区間
     * @param {Number} opts.keyMoneyMonthFrom 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.keyMoneyMonthTo 礼金/権利金（ヶ月）検索区間
     * @param {Number} opts.repairCostYenFrom 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostYenTo 敷引/償却（円）検索区間
     * @param {Number} opts.repairCostMonthFrom 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.repairCostMonthTo 敷引/償却（ヶ月）検索区間
     * @param {Number} opts.initialCostFrom 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.initialCostTo 初期費用検索区間。非推奨のため代わりにinitial_cost_codeを使うこと。
     * @param {Number} opts.monthlyCostSummaryFrom 管理費など込み賃料検索区間
     * @param {Number} opts.monthlyCostSummaryTo 管理費など込み賃料検索区間
     * @param {Number} opts.advertisingFeePercentTo 広告料（パーセント）検索区間
     * @param {Number} opts.advertisingFeePercentFrom 広告料（パーセント）検索区間
     * @param {Number} opts.areaFrom 専有面積検索区間
     * @param {Number} opts.areaTo 専有面積検索区間
     * @param {Number} opts.exclusiveAreaFrom 専有面積検索区間
     * @param {Number} opts.exclusiveAreaTo 専有面積検索区間
     * @param {Number} opts.walkFromStationMinutesFrom 駅からの徒歩時間
     * @param {Number} opts.walkFromStationMinutesTo 駅からの徒歩時間
     * @param {Date} opts.lastUpdateDatetimeFrom 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.lastUpdateDatetimeTo 情報更新日検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeFrom 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.publishedDatetimeTo 公開日時検索区間。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateFrom 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.priceUpdateDateTo 現賃料更新日検索区間。検索対象は賃料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateFrom 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {Date} opts.advertisingFeeUpdateDateTo 広告料更新日検索区間。検索対象は広告料更新日が公開日時以降のものに限られる。timezoneを明示しない場合はUTCとして解釈される
     * @param {String} opts.originalPropertyCodeText 自社管理番号
     * @param {Array.<String>} opts.buildingGuid 建物スペックGUID
     * @param {Array.<Number>} opts.buildingTypeCode 建物形式区分<br/>1: マンション<br/>2: リゾートマンション<br/>3: アパート<br/>4: テラスハウス<br/>5: タウンハウス<br/>6: 戸建<br/>7: 土地<br/>8: 店舗<br/>9: 事務所<br/>10: ビル<br/>11: 倉庫<br/>12: 工場<br/>13: トランクルーム<br/>14: 駐車場<br/>15: バイク置き場<br/>16: その他
     * @param {Array.<Number>} opts.structureCode 構造区分<br/>1: 木造<br/>2: 軽量鉄骨<br/>3: 鉄筋コンクリート<br/>4: 鉄骨鉄筋コンクリート<br/>5: ALC<br/>6: プレキャストコンクリート<br/>7: 鉄筋ブロック<br/>8: 鉄骨プレ<br/>9: 鉄骨<br/>10: その他
     * @param {Number} opts.siteAreaFrom 土地面積検索区間
     * @param {Number} opts.siteAreaTo 土地面積検索区間
     * @param {String} opts.buildingName 建物名
     * @param {String} opts.buildingFurigana 建物名フリガナ
     * @param {Array.<String>} opts.tagGuid タグGUID
     * @param {String} opts.prefecture 都道府県
     * @param {Array.<Number>} opts.prefectureCode 都道府県コード
     * @param {Array.<String>} opts.city 市区郡
     * @param {Array.<Number>} opts.cityCode 市区郡コード
     * @param {Array.<String>} opts.town 町村
     * @param {Array.<Number>} opts.jisCode JISコード
     * @param {Array.<String>} opts.address 住所
     * @param {Array.<Number>} opts.lineCode 沿線コード
     * @param {Array.<Number>} opts.stationCode 駅コード
     * @param {Array.<Number>} opts.customerKey カスタマーキー
     * @param {Boolean} opts.ignorePublishStatus 掲載状態を無視するフラグ (default to false)
     * @param {String} opts.nameOrCodeText 建物名/物件名フリガナ/自社管理番号のいずれかにマッチするものを対象とする。建物名表示フラグがfalseの物件は自社管理番号のみがマッチング対象となる
     * @param {Boolean} opts.ignoreNameDisplay 建物名/物件名フリガナでの検索時はデフォルトでは建物名表示フラグがfalseの物件は対象にしない。このフラグを有効化すると表示フラグに関わらず検索対象になる
     * @param {String} opts.query 詳細検索用特殊パラメータ。検索条件を JSON で記載し、エンコードしたものを     バリューに渡す。          ex) '[{\"building_name\": \"いい生活アパート\", \"price.to\": 700000}, {\"buildinig_name\": \"いい生活ハイツ\", \"walk_from_station_minutes.to\": 10}]'     -> ?query=%5B%7B%22building_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%82%A2%E3%83%91%E3%83%BC%E3%83%88%22%2C%20%22price.to%22%3A%20700000%7D%2C%20%7B%22buildinig_name%22%3A%20%22%E3%81%84%E3%81%84%E7%94%9F%E6%B4%BB%E3%83%8F%E3%82%A4%E3%83%84%22%2C%20%22walk_from_station_minutes.to%22%3A%2010%7D%5D          上記の例の場合の絞り込み条件は、抽象的に書き下すと次のようになる。          (building_name like \"%いい生活アパート%\" AND price <= 700000) OR (building_name like \"%いい生活ハイツ%\" AND walk_from_station_minutes <= 10)     
     * @param {String} opts.order 複数のソート条件を指定したい場合の特殊パラメータ。{.orderを除いたソートパラメータ名}.{asc か desc}を , 区切りで並べて指定すると、その先頭から順にソートが適用される。例: order=property_full_key.desc,layout.asc は、property_full_keyの降順、layoutの昇順でソートされる。このパラメータを個別のソート条件と同時に指定した場合、このパラメータのソート順が先に適用され、その後に個別のソート条件が適用される。
     * @param {module:model/Order} opts.propertyFullKeyOrder 物件完全IDソート順
     * @param {module:model/Order} opts.propertyClassCodeOrder 募集種別区分コードソート順
     * @param {module:model/Order} opts.propertyUseCodeOrder 募集用途区分ソート順
     * @param {module:model/Order} opts.propertyTypeCodeOrder 募集種別区分ソート順
     * @param {module:model/Order} opts.modifiedOrder 新着ソート順。非推奨のため代わりにlast_update_datetime.orderを使うこと。
     * @param {module:model/Order} opts.lastUpdateDatetimeOrder 新着ソート順
     * @param {module:model/Order} opts.layoutOrder 間取りソート順
     * @param {module:model/Order} opts.buildingAgeOrder 築年月ソート順
     * @param {module:model/Order} opts.stationOrder 駅ソート順
     * @param {module:model/Order} opts.stationNameOrder 駅名ソート順
     * @param {module:model/Order} opts.lineOrder 沿線ソート順
     * @param {module:model/Order} opts.lineNameOrder 沿線名ソート順
     * @param {module:model/Order} opts.walkFromStationMinutesOrder 駅徒歩時間ソート順
     * @param {module:model/Order} opts.addressOrder 住所コードソート順
     * @param {module:model/Order} opts.searchAreaOrder 面積ソート順
     * @param {module:model/Order} opts.exclusiveAreaOrder 専有面積ソート順
     * @param {module:model/Order} opts.buildingNameOrder 建物名ソート順
     * @param {module:model/Order} opts.buildingFuriganaOrder 建物名フリガナソート順
     * @param {module:model/Order} opts.depositPriceOrder 敷金/保証金（円）ソート順
     * @param {module:model/Order} opts.keyMoneyPriceOrder 礼金/権利金（円）ソート順
     * @param {module:model/Order} opts.manageCostPriceOrder 管理費/共益費/雑費（円）ソート順
     * @param {module:model/Order} opts.advertisingFeePercentOrder 広告料（パーセント）ソート順
     * @param {module:model/Order} opts.advertiseFlagOrder 広告可フラグソート順
     * @param {module:model/Order} opts.floorNumberOrder 所在階ソート順
     * @param {module:model/Order} opts.availableDateOrder 入居可能日ソート順
     * @param {module:model/Order} opts.priceOrder 賃料ソート順
     * @param {module:model/Order} opts.initialCostOrder 初期費用ソート順
     * @param {module:model/Order} opts.monthlyCostSummaryOrder 管理費など込み賃料
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PropertyList}
     */
    searchRentPropertyByDwellingUnit(opts) {
      return this.searchRentPropertyByDwellingUnitWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
